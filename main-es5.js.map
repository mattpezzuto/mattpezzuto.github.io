{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/battle-screen-boss/battle-screen-boss.component.html","src/app/battle-screen-quest/battle-screen-quest.component.html","src/app/battle-screen/battle-screen.component.html","src/app/score-screen/score-screen.component.html","src/app/select-quest/select-quest.component.html","src/app/tavern-app/tavern-app.component.html","src/app/title-screen-app/title-screen-app.component.html","node_modules/tslib/tslib.es6.js","src/app/TavernCreature.ts","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/battle-screen-boss/battle-screen-boss.component.css","src/app/battle-screen-boss/battle-screen-boss.component.ts","src/app/battle-screen-quest/battle-screen-quest.component.css","src/app/battle-screen-quest/battle-screen-quest.component.ts","src/app/battle-screen/battle-screen.component.css","src/app/battle-screen/battle-screen.component.ts","src/app/battle.ts","src/app/creature.ts","src/app/creaturePool.model.ts","src/app/creatureStats.ts","src/app/gameState.model.ts","src/app/player.model.ts","src/app/quest-rewards.ts","src/app/score-screen/score-screen.component.css","src/app/score-screen/score-screen.component.ts","src/app/select-quest/select-quest.component.css","src/app/select-quest/select-quest.component.ts","src/app/tavern-app/tavern-app.component.css","src/app/tavern-app/tavern-app.component.ts","src/app/title-screen-app/title-screen-app.component.css","src/app/title-screen-app/title-screen-app.component.ts","src/app/utils.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\r\\n<div *ngIf=\\\"this.gameState.stage === 1\\\">\\r\\n  <app-title-screen-app [localGameState]=gameState></app-title-screen-app>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"this.gameState.stage === 2\\\">\\r\\n  <app-tavern-app [localGameState]=gameState></app-tavern-app>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"this.gameState.stage === 3\\\">\\r\\n  <app-battle-screen [localGameState]=gameState></app-battle-screen>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"this.gameState.stage === 4\\\">\\r\\n  <app-battle-screen-boss [localGameState]=gameState></app-battle-screen-boss>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"this.gameState.stage === 5\\\">\\r\\n  <app-select-quest [localGameState]=gameState></app-select-quest>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"this.gameState.stage === 6\\\">\\r\\n  <app-battle-screen-quest [localGameState]=gameState></app-battle-screen-quest>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"this.gameState.stage === 7\\\">\\r\\n  <app-score-screen [localGameState]=gameState></app-score-screen>\\r\\n</div>\\r\\n\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<style>\\r\\n.itemHeader { grid-area: header; }\\r\\n.itemNextBtn { grid-area: nextBtn}\\r\\n.itemPlayerHeader { grid-area: playerHeader}\\r\\n.itemBattleLog { grid-area: battleLog}\\r\\n.itemBattleLogBtn { grid-area: battleLogBtn}\\r\\n\\r\\n\\r\\n.grid-container {\\r\\n  display: grid;\\r\\n  grid-template-areas:\\r\\n    'header header header header nextBtn'\\r\\n    'battleLogBtn playerHeader playerHeader playerHeader playerHeader'\\r\\n    'battleLog battleLog battleLog battleLog battleLog';\\r\\n\\r\\n  gap: 8px;\\r\\n  background-color: #2196F3;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\n.grid-container > div {\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n  text-align: center;\\r\\n  padding: 20px 0;\\r\\n  font-size: 30px;\\r\\n}\\r\\n\\r\\n</style>\\r\\n</head>\\r\\n<body>\\r\\n\\r\\n<div class=\\\"grid-container\\\">\\r\\n  <div class=\\\"itemHeader\\\">\\r\\n    <p>Guilds of Greystone</p>\\r\\n    <p>Battle Screen</p>\\r\\n    <p>- Defeating the boss will give you an extra 100g</p>\\r\\n    <p>- Finishing in the bottom 4 in boss damage will result in a loss of 1 life</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemNextBtn\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onNext()\\\">Next</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemBattleLogBtn\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onToggleBattleLog()\\\">Toggle Battle Log</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayerHeader\\\"><b>{{titleLog}}</b></div>\\r\\n  <div class=\\\"itemBattleLog\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let battleLog of battleLogs; let indeOfElement=index;\\\">\\r\\n            {{battleLog}}\\r\\n        </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n\\r\\n\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<style>\\r\\n.itemHeader { grid-area: header; }\\r\\n.itemNextBtn { grid-area: nextBtn}\\r\\n.itemPlayerHeader { grid-area: playerHeader}\\r\\n.itemBattleLog { grid-area: battleLog}\\r\\n.itemBattleLogBtn { grid-area: battleLogBtn}\\r\\n\\r\\n\\r\\n.grid-container {\\r\\n  display: grid;\\r\\n  grid-template-areas:\\r\\n    'header header header header nextBtn'\\r\\n    'battleLogBtn playerHeader playerHeader playerHeader playerHeader'\\r\\n    'battleLog battleLog battleLog battleLog battleLog';\\r\\n\\r\\n  gap: 8px;\\r\\n  background-color: #2196F3;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\n.grid-container > div {\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n  text-align: center;\\r\\n  padding: 20px 0;\\r\\n  font-size: 30px;\\r\\n}\\r\\n\\r\\n</style>\\r\\n</head>\\r\\n<body>\\r\\n\\r\\n<div class=\\\"grid-container\\\">\\r\\n  <div class=\\\"itemHeader\\\">\\r\\n    <p>Guilds of Greystone</p>\\r\\n    <p>Battle Quest - Defeating the encounter will give you the quest reward</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemNextBtn\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onNext()\\\">Next</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemBattleLogBtn\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onToggleBattleLog()\\\">Toggle Battle Log</button>\\r\\n  </div>  \\r\\n\\r\\n  <div class=\\\"itemPlayerHeader\\\"><b>{{titleLog}}</b></div>\\r\\n  <div class=\\\"itemBattleLog\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let battleLog of battleLogs; let indeOfElement=index;\\\">\\r\\n            {{battleLog}}\\r\\n        </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n<p>Creature in Current Pool:  {{this.localGameState.creaturePool.tier1.length}}</p>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n\\r\\n\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<style>\\r\\n.itemHeader { grid-area: header; }\\r\\n.itemNextBtn { grid-area: nextBtn}\\r\\n.itemPlayerHeader { grid-area: playerHeader}\\r\\n.itemBattleLogBtn { grid-area: battleLogBtn}\\r\\n.itemBattleLog { grid-area: battleLog}\\r\\n\\r\\n\\r\\n.grid-container {\\r\\n  display: grid;\\r\\n  grid-template-areas:\\r\\n    'header header header header nextBtn'\\r\\n    'battleLogBtn playerHeader playerHeader playerHeader playerHeader'\\r\\n    'battleLog battleLog battleLog battleLog battleLog';\\r\\n\\r\\n  gap: 8px;\\r\\n  background-color: #2196F3;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\n.grid-container > div {\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n  text-align: center;\\r\\n  padding: 20px 0;\\r\\n  font-size: 30px;\\r\\n}\\r\\n\\r\\n</style>\\r\\n</head>\\r\\n<body>\\r\\n\\r\\n<div class=\\\"grid-container\\\">\\r\\n  <div class=\\\"itemHeader\\\">\\r\\n    <p>Guilds of Greystone</p>\\r\\n    <p>Battle Screen</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemNextBtn\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onNext()\\\">Next</button>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"itemBattleLogBtn\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onToggleBattleLog()\\\">Toggle Battle Log</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayerHeader\\\"><b>{{titleLog}}</b></div>\\r\\n\\r\\n\\r\\n  \\r\\n  <div class=\\\"itemBattleLog\\\">\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let battleLog of battleLogs; let indeOfElement=index;\\\">\\r\\n            {{battleLog}}\\r\\n        </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n\\r\\n\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<style>\\r\\n.itemHeader { grid-area: header; }\\r\\n.itemPlayerHeader { grid-area: playerHeader}\\r\\n.itemLifeHeader { grid-area: lifeHeader}\\r\\n.itemRecordHeader { grid-area: recordHeader}\\r\\n.itemBossDmgHeader { grid-area: bossDmgHeader}\\r\\n.itemUnitsHeader { grid-area: unitsHeader}\\r\\n.itemPlayer1 { grid-area: player1; }\\r\\n.itemPlayer2 { grid-area: player2; }\\r\\n.itemPlayer3 { grid-area: player3; }\\r\\n.itemPlayer4 { grid-area: player4; }\\r\\n.itemPlayer5 { grid-area: player5; }\\r\\n.itemPlayer6 { grid-area: player6; }\\r\\n.itemPlayer7 { grid-area: player7; }\\r\\n.itemPlayer8 { grid-area: player8; }\\r\\n.itemLifePlayer1 { grid-area: lifePlayer1; }\\r\\n.itemLifePlayer2 { grid-area: lifePlayer2; }\\r\\n.itemPLifelayer3 { grid-area: lifePlayer3; }\\r\\n.itemLifePlayer4 { grid-area: lifePlayer4; }\\r\\n.itemLifePlayer5 { grid-area: lifePlayer5; }\\r\\n.itemLifePlayer6 { grid-area: lifePlayer6; }\\r\\n.itemLifePlayer7 { grid-area: lifePlayer7; }\\r\\n.itemLifePlayer8 { grid-area: lifePlayer8; }\\r\\n.itemRecordPlayer1 { grid-area: recordPlayer1; }\\r\\n.itemRecordPlayer2 { grid-area: recordPlayer2; }\\r\\n.itemPRecordlayer3 { grid-area: recordPlayer3; }\\r\\n.itemRecordPlayer4 { grid-area: recordPlayer4; }\\r\\n.itemRecordPlayer5 { grid-area: recordPlayer5; }\\r\\n.itemRecordPlayer6 { grid-area: recordPlayer6; }\\r\\n.itemRecordPlayer7 { grid-area: recordPlayer7; }\\r\\n.itemRecordPlayer8 { grid-area: recordPlayer8; }\\r\\n.itemBossDmg1 { grid-area: bossDmg1; }\\r\\n.itemBossDmg2 { grid-area: bossDmg2; }\\r\\n.itemBossDmg3 { grid-area: bossDmg3; }\\r\\n.itemBossDmg4 { grid-area: bossDmg4; }\\r\\n.itemBossDmg5 { grid-area: bossDmg5; }\\r\\n.itemBossDmg6 { grid-area: bossDmg6; }\\r\\n.itemBossDmg7 { grid-area: bossDmg7; }\\r\\n.itemBossDmg8 { grid-area: bossDmg8; }\\r\\n.itemUnits1 { grid-area: units1; }\\r\\n.itemUnits2 { grid-area: units2; }\\r\\n.itemUnits3 { grid-area: units3; }\\r\\n.itemUnits4 { grid-area: units4; }\\r\\n.itemUnits5 { grid-area: units5; }\\r\\n.itemUnits6 { grid-area: units6; }\\r\\n.itemUnits7 { grid-area: units7; }\\r\\n.itemUnits8 { grid-area: units8; }\\r\\n.itemNextBtn { grid-area: nextBtn; }\\r\\n\\r\\n\\r\\n.grid-container {\\r\\n  display: grid;\\r\\n  grid-template-areas:\\r\\n    'header header header header nextBtn'\\r\\n    'playerHeader lifeHeader recordHeader bossDmgHeader unitsHeader'\\r\\n    'player1 lifePlayer1 recordPlayer1 bossDmg1 units1'\\r\\n    'player2 lifePlayer2 recordPlayer2 bossDmg2 units2'\\r\\n\\t  'player3 lifePlayer3 recordPlayer3 bossDmg3 units3'\\r\\n\\t  'player4 lifePlayer4 recordPlayer4 bossDmg4 units4'\\r\\n    'player5 lifePlayer5 recordPlayer5 bossDmg5 units5'\\r\\n    'player6 lifePlayer6 recordPlayer6 bossDmg6 units6'\\r\\n    'player7 lifePlayer7 recordPlayer7 bossDmg7 units7'\\r\\n    'player8 lifePlayer8 recordPlayer8 bossDmg8 units8';\\r\\n\\r\\n  gap: 8px;\\r\\n  background-color: #2196F3;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\n.grid-container > div {\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n  text-align: center;\\r\\n  padding: 20px 0;\\r\\n  font-size: 30px;\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style-type: none; /* Remove default list styles */\\r\\n    padding: 0;\\r\\n  }\\r\\n  li {\\r\\n    display: inline; /* or display: inline-block; */\\r\\n    margin-right: 10px; /* Optional spacing between items */\\r\\n  }\\r\\n\\r\\n</style>\\r\\n</head>\\r\\n<body>\\r\\n\\r\\n<div class=\\\"grid-container\\\">\\r\\n  <div class=\\\"itemHeader\\\">\\r\\n    <p>Guilds of Greystone</p>\\r\\n    <p>Score Screen</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayerHeader\\\"><b>Player</b></div>\\r\\n  <div class=\\\"itemLifePlayerHeader\\\"><b>Life</b></div>\\r\\n  <div class=\\\"itemRecordPlayerHeader\\\"><b>Record</b></div>\\r\\n  <div class=\\\"itemBossDmgHeader\\\"><b>Boss Damage</b></div>\\r\\n  <div class=\\\"itemUnitsHeader\\\"><b>Units</b></div>\\r\\n\\r\\n  <div class=\\\"itemPlayer1\\\">{{sortedPlayerList[0].name}}</div>\\r\\n  <div class=\\\"itemLifePlayer1\\\">{{sortedPlayerList[0].life}}</div>\\r\\n  <div class=\\\"recordPlayer1\\\">{{sortedPlayerList[0].getRecord()}}</div>\\r\\n  <div class=\\\"itemBossDmg1\\\">{{sortedPlayerList[0].getBossDmg()}}</div>\\r\\n  <div class=\\\"units1\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let creature of sortedPlayerList[0].creatureList;\\\">\\r\\n        <img src=\\\"{{creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"itemPlayer2\\\">{{sortedPlayerList[1].name}}</div>\\r\\n  <div class=\\\"itemLifePlayer2\\\">{{sortedPlayerList[1].life}}</div>\\r\\n  <div class=\\\"recordPlayer2\\\">{{sortedPlayerList[1].getRecord()}}</div>\\r\\n  <div class=\\\"itemBossDmg2\\\">{{sortedPlayerList[1].getBossDmg()}}</div>\\r\\n  <div class=\\\"units2\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let creature of sortedPlayerList[1].creatureList;\\\">\\r\\n        <img src=\\\"{{creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayer3\\\">{{sortedPlayerList[2].name}}</div>\\r\\n  <div class=\\\"itemLifePlayer3\\\">{{sortedPlayerList[2].life}}</div>\\r\\n  <div class=\\\"recordPlayer3\\\">{{sortedPlayerList[2].getRecord()}}</div>\\r\\n  <div class=\\\"itemBossDmg3\\\">{{sortedPlayerList[2].getBossDmg()}}</div>\\r\\n  <div class=\\\"units3\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let creature of sortedPlayerList[2].creatureList;\\\">\\r\\n        <img src=\\\"{{creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayer4\\\">{{sortedPlayerList[3].name}}</div>\\r\\n  <div class=\\\"itemLifePlayer4\\\">{{sortedPlayerList[3].life}}</div>\\r\\n  <div class=\\\"recordPlayer4\\\">{{sortedPlayerList[3].getRecord()}}</div>\\r\\n  <div class=\\\"itemBossDmg4\\\">{{sortedPlayerList[3].getBossDmg()}}</div>\\r\\n  <div class=\\\"units4\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let creature of sortedPlayerList[3].creatureList;\\\">\\r\\n        <img src=\\\"{{creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayer5\\\">{{sortedPlayerList[4].name}}</div>\\r\\n  <div class=\\\"itemLifePlayer5\\\">{{sortedPlayerList[4].life}}</div>\\r\\n  <div class=\\\"recordPlayer5\\\">{{sortedPlayerList[4].getRecord()}}</div>\\r\\n  <div class=\\\"itemBossDmg5\\\">{{sortedPlayerList[4].getBossDmg()}}</div>\\r\\n  <div class=\\\"units5\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let creature of sortedPlayerList[4].creatureList;\\\">\\r\\n        <img src=\\\"{{creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayer6\\\">{{sortedPlayerList[5].name}}</div>\\r\\n  <div class=\\\"itemLifePlayer6\\\">{{sortedPlayerList[5].life}}</div>\\r\\n  <div class=\\\"recordPlayer6\\\">{{sortedPlayerList[5].getRecord()}}</div>\\r\\n  <div class=\\\"itemBossDmg6\\\">{{sortedPlayerList[5].getBossDmg()}}</div>\\r\\n  <div class=\\\"units6\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let creature of sortedPlayerList[5].creatureList;\\\">\\r\\n        <img src=\\\"{{creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayer7\\\">{{sortedPlayerList[6].name}}</div>\\r\\n  <div class=\\\"itemLifePlayer7\\\">{{sortedPlayerList[6].life}}</div>\\r\\n  <div class=\\\"recordPlayer7\\\">{{sortedPlayerList[6].getRecord()}}</div>\\r\\n  <div class=\\\"itemBossDmg7\\\">{{sortedPlayerList[6].getBossDmg()}}</div>\\r\\n  <div class=\\\"units7\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let creature of sortedPlayerList[6].creatureList;\\\">\\r\\n        <img src=\\\"{{creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemPlayer8\\\">{{sortedPlayerList[7].name}}</div>\\r\\n  <div class=\\\"itemLifePlayer8\\\">{{sortedPlayerList[7].life}}</div>\\r\\n  <div class=\\\"recordPlayer8\\\">{{sortedPlayerList[7].getRecord()}}</div>\\r\\n  <div class=\\\"itemBossDmg8\\\">{{sortedPlayerList[7].getBossDmg()}}</div>\\r\\n  <div class=\\\"units8\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let creature of sortedPlayerList[7].creatureList;\\\">\\r\\n        <img src=\\\"{{creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemNextBtn\\\">\\r\\n        <button class=\\\"button\\\" (click)=\\\"onNext()\\\">Next</button>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n\\r\\n\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<style>\\r\\n.itemHeader { grid-area: header; }\\r\\n.itemSelectHeader { grid-area: selectHeader}\\r\\n.itemQuestOppHeader { grid-area: questOppHeader}\\r\\n.itemQuestOppUnitsHeader { grid-area: questOppUnitsHeader}\\r\\n.itemQuestRewardsHeader { grid-area: questRewardsHeader}\\r\\n.itemSelect1 { grid-area: select1; }\\r\\n.itemSelect2 { grid-area: select2; }\\r\\n.itemSelect3 { grid-area: select3; }\\r\\n.itemSelect4 { grid-area: select4; }\\r\\n.itemSelect5 { grid-area: select5; }\\r\\n.itemQuestOpp1 { grid-area: questOpp1; }\\r\\n.itemQuestOpp2 { grid-area: questOpp2; }\\r\\n.itemQuestOpp3 { grid-area: questOpp3; }\\r\\n.itemQuestOpp4 { grid-area: questOpp4; }\\r\\n.itemQuestOpp5 { grid-area: questOpp5; }\\r\\n.itemQuestOppUnits1 { grid-area: questOppUnits1; }\\r\\n.itemQuestOppUnits2 { grid-area: questOppUnits2; }\\r\\n.itemQuestOppUnits3 { grid-area: questOppUnits3; }\\r\\n.itemQuestOppUnits4 { grid-area: questOppUnits4; }\\r\\n.itemQuestOppUnits5 { grid-area: questOppUnits5; }\\r\\n\\r\\n.itemQuestRewards1 { grid-area: questRewards1; }\\r\\n.itemQuestRewards2 { grid-area: questRewards2; }\\r\\n.itemQuestRewards3 { grid-area: questRewards3; }\\r\\n.itemQuestRewards4 { grid-area: questRewards4; }\\r\\n.itemQuestRewards5 { grid-area: questRewards5; }\\r\\n\\r\\n\\r\\n.grid-container {\\r\\n  display: grid;\\r\\n  grid-template-areas:\\r\\n    'header header header header nextBtn'\\r\\n    'selectHeader questOppHeader questOppUnitsHeader questRewardsHeader questRewardsHeader'\\r\\n    'select1 questOpp1 questOppUnits1 questRewards1 questRewards1'\\r\\n    'select2 questOpp2 questOppUnits2 questRewards2 questRewards2'\\r\\n    'select3 questOpp3 questOppUnits3 questRewards3 questRewards3'\\r\\n    'select4 questOpp4 questOppUnits4 questRewards4 questRewards4'\\r\\n    'select5 questOpp5 questOppUnits5 questRewards5 questRewards5';\\r\\n\\r\\n\\r\\n  gap: 8px;\\r\\n  background-color: #2196F3;\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\n.grid-container > div {\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n  text-align: center;\\r\\n  padding: 20px 0;\\r\\n  font-size: 30px;\\r\\n}\\r\\n\\r\\nul {\\r\\n    list-style-type: none; /* Remove default list styles */\\r\\n    padding: 0;\\r\\n  }\\r\\n  li {\\r\\n    display: inline; /* or display: inline-block; */\\r\\n    margin-right: 10px; /* Optional spacing between items */\\r\\n  }\\r\\n\\r\\n</style>\\r\\n</head>\\r\\n<body>\\r\\n\\r\\n<div class=\\\"grid-container\\\">\\r\\n  <div class=\\\"itemHeader\\\">\\r\\n    <p>Guilds of Greystone</p>\\r\\n    <p>Select Quest</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemNextBtn\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onNext()\\\">Next</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemSelectHeader\\\"></div>\\r\\n  <div class=\\\"itemQuestOppHeader\\\"><b>Opponent</b></div>\\r\\n  <div class=\\\"itemQuestOppUnitsHeader\\\"><b>Units</b></div>\\r\\n  <div class=\\\"itemQuestRewardsHeader\\\"><b>Quest Rewards</b></div>\\r\\n\\r\\n  <div class=\\\"itemQuest1\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSelectQuest(1)\\\">Select</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOpp1\\\">\\r\\n    <img src=\\\"{{questCreature[0].getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOppUnits1\\\">{{questUnits[0]}}</div>\\r\\n  <div class=\\\"itemQuestRewards1\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let reward of questRewardImages1;\\\">\\r\\n        <img src=\\\"{{reward.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemQuest2\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSelectQuest(2)\\\">Select</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOpp2\\\">\\r\\n    <img src=\\\"{{questCreature[1].getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOppUnits2\\\">{{questUnits[1]}}</div>\\r\\n  <div class=\\\"itemQuestRewards2\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let reward of questRewardImages2;\\\">\\r\\n        <img src=\\\"{{reward.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemQuest3\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSelectQuest(3)\\\">Select</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOpp3\\\">\\r\\n    <img src=\\\"{{questCreature[2].getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOppUnits3\\\">{{questUnits[2]}}</div>\\r\\n  <div class=\\\"itemQuestRewards3\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let reward of questRewardImages3;\\\">\\r\\n        <img src=\\\"{{reward.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemQuest4\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSelectQuest(4)\\\">Select</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOpp4\\\">\\r\\n    <img src=\\\"{{questCreature[3].getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOppUnits4\\\">{{questUnits[3]}}</div>\\r\\n  <div class=\\\"itemQuestRewards4\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let reward of questRewardImages4;\\\">\\r\\n        <img src=\\\"{{reward.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>  \\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"itemQuest5\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSelectQuest(5)\\\">Select</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOpp5\\\">\\r\\n    <img src=\\\"{{questCreature[4].getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n  </div>\\r\\n  <div class=\\\"itemQuestOppUnits5\\\">{{questUnits[4]}}</div>\\r\\n  <div class=\\\"itemQuestRewards5\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let reward of questRewardImages5;\\\">\\r\\n        <img src=\\\"{{reward.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n  <p>Creature in Current Pool:  {{this.localGameState.creaturePool.tier1.length}}</p>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\\r\\n\\r\\n\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<style>\\r\\n.itemHeader { grid-area: header; }\\r\\n.itemGold { grid-area: gold; }\\r\\n.itemMenu { grid-area: menu; }\\r\\n.itemBoard { grid-area: board; }\\r\\n.itemShop1 { grid-area: shop1; }\\r\\n.itemShop2 { grid-area: shop2; }\\r\\n.itemShop3 { grid-area: shop3; }\\r\\n.itemShopBtn1 { grid-area: btnShop1; }\\r\\n.itemShopBtn2 { grid-area: btnShop2; }\\r\\n.itemShopBtn3 { grid-area: btnShop3; }\\r\\n.itemBoard1 { grid-area: board1; }\\r\\n.itemBoard2 { grid-area: board2; }\\r\\n.itemBoard3 { grid-area: board3; }\\r\\n.itemBoard4 { grid-area: board4; }\\r\\n.itemBoard5 { grid-area: board5; }\\r\\n.itemBoardBtn1 { grid-area: boardBtn1; }\\r\\n.itemBoardBtn2 { grid-area: boardBtn2; }\\r\\n.itemBoardBtn3 { grid-area: boardBtn3; }\\r\\n.itemBoardBtn4 { grid-area: boardBtn4; }\\r\\n.itemBoardBtn5 { grid-area: boardBtn5; }\\r\\n.itemHand1 { grid-area: hand1; }\\r\\n.itemHand2 { grid-area: hand2; }\\r\\n.itemHand3 { grid-area: hand3; }\\r\\n.itemHand4 { grid-area: hand4; }\\r\\n.itemHand5 { grid-area: hand5; }\\r\\n\\r\\n.grid-container {\\r\\n  display: grid;\\r\\n  grid-template-areas:\\r\\n    'header header header header header header gold'\\r\\n    'menu shop1 shop1 shop2 shop2 shop3 shop3'\\r\\n    'menu btnShop1 btnShop1 btnShop2 btnShop2 btnShop3 btnShop3'\\r\\n\\t  'menu board board board board board board'\\r\\n\\t  'menu board1 board2 board3 board4 board5 board6'\\r\\n    'menu boardBtn1 boardBtn2 boardBtn3 boardBtn4 boardBtn5 boardBtn6'\\r\\n    'menu hand1 hand2 hand3 hand4 hand5 hand6';\\r\\n\\r\\n  gap: 10px;\\r\\n  background-color: #2196F3;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.grid-container > div {\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n  text-align: center;\\r\\n  padding: 20px 0;\\r\\n  font-size: 30px;\\r\\n}\\r\\n</style>\\r\\n</head>\\r\\n<body>\\r\\n\\r\\n<div class=\\\"grid-container\\\">\\r\\n  <div class=\\\"itemHeader\\\">\\r\\n    <p>Guilds of Greystone</p>\\r\\n    <p>Shop</p>\\r\\n  </div>\\r\\n  <div class=\\\"itemGold\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onNext()\\\">Proceed to Battle</button>\\r\\n    <p>Gold = {{this.localGameState.playerList[0].gold}} </p>\\r\\n    <!-- <p>Time Left:  {{this.counter}}</p> -->\\r\\n    <button class=\\\"button\\\" (click)=\\\"onUpgradeRecruitment()\\\">Upgrade Recruitment (100g)</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onRefresh()\\\">Refresh ({{refreshCounter}})</button>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"itemMenu\\\">\\r\\n    <p>Menu</p>\\r\\n  </div>\\r\\n \\r\\n\\r\\n  <div class=\\\"itemShop1\\\">\\r\\n    <p *ngIf=getTavernCreature(0)> {{getTavernCreature(0).creature.getName()}}</p>\\r\\n    <img src=\\\"{{getTavernCreature(0).creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n  </div>  \\r\\n  <div class=\\\"itemShop2\\\">\\r\\n    <p *ngIf=getTavernCreature(1)> {{getTavernCreature(1).creature.getName()}}</p>\\r\\n    <img src=\\\"{{getTavernCreature(1).creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n  </div>  \\r\\n  <div class=\\\"itemShop3\\\">\\r\\n    <p *ngIf=getTavernCreature(2)> {{getTavernCreature(2).creature.getName()}}</p>\\r\\n    <img src=\\\"{{getTavernCreature(2).creature.getImage()}}\\\" style=\\\"width:120;height:150px;\\\">\\r\\n  </div>  \\r\\n  <div class=\\\"itemShopBtn1\\\">\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"!getTavernCreature(0).sold && !isPartyFull()\\\" (click)=\\\"onBuy(0)\\\">Buy</button>\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"getTavernCreature(0).sold || isPartyFull()\\\" [disabled] = \\\"true\\\" (click)=\\\"onBuy(0)\\\">Buy</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemShopBtn2\\\">\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"!getTavernCreature(1).sold && !isPartyFull()\\\" (click)=\\\"onBuy(1)\\\">Buy</button>\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"getTavernCreature(1).sold || isPartyFull()\\\" [disabled] = \\\"true\\\" (click)=\\\"onBuy(1)\\\">Buy</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemShopBtn3\\\">\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"!getTavernCreature(2).sold && !isPartyFull()\\\" (click)=\\\"onBuy(2)\\\">Buy</button>\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"getTavernCreature(2).sold || isPartyFull()\\\" [disabled] = \\\"true\\\" (click)=\\\"onBuy(2)\\\">Buy</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"itemBoard\\\">Board</div>  \\r\\n  <div class=\\\"itemBoard1\\\">\\r\\n    <p *ngIf=getPlayersBoard(0)> {{getPlayersBoard(0).getName()}}</p>\\r\\n  </div>  \\r\\n  <div class=\\\"itemBoard2\\\">\\r\\n    <p *ngIf=getPlayersBoard(1)> {{getPlayersBoard(1).getName()}}</p>\\r\\n  </div>  \\r\\n  <div class=\\\"itemBoard3\\\">\\r\\n    <p *ngIf=getPlayersBoard(2)> {{getPlayersBoard(2).getName()}}</p>\\r\\n  </div>  \\r\\n  <div class=\\\"itemBoard4\\\">\\r\\n    <p *ngIf=getPlayersBoard(3)> {{getPlayersBoard(3).getName()}}</p>\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"getIsSlotLocked(3)\\\" (click)=\\\"onUnlock(3)\\\">Unlock (100g)</button>\\r\\n  </div>  \\r\\n  <div class=\\\"itemBoard5\\\">\\r\\n    <p *ngIf=getPlayersBoard(4)> {{getPlayersBoard(4).getName()}}</p>\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"getIsSlotLocked(4) && !getIsSlotLocked(3)\\\" (click)=\\\"onUnlock(4)\\\">Unlock (100g)</button>\\r\\n  </div>  \\r\\n  <div class=\\\"itemBoard6\\\">\\r\\n    <p *ngIf=getPlayersBoard(5)> {{getPlayersBoard(5).getName()}}</p>\\r\\n    <button class=\\\"button\\\" *ngIf=\\\"getIsSlotLocked(5) && !getIsSlotLocked(4)\\\" (click)=\\\"onUnlock(5)\\\">Unlock (100g)</button>\\r\\n  </div>  \\r\\n\\r\\n  \\r\\n  <div class=\\\"itemBoardBtn1\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(0)\\\">>>></button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSell(0)\\\">Sell</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemBoardBtn2\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(0)\\\"><<<</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSell(1)\\\">Sell</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(1)\\\">>>></button>\\r\\n  </div>\\r\\n  <div class=\\\"itemBoardBtn3\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(1)\\\"><<<</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSell(2)\\\">Sell</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(2)\\\">>>></button>\\r\\n  </div>\\r\\n  <div class=\\\"itemBoardBtn4\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(2)\\\"><<<</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSell(3)\\\">Sell</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(3)\\\">>>></button>\\r\\n  </div>\\r\\n  <div class=\\\"itemBoardBtn5\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(3)\\\"><<<</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSell(4)\\\">Sell</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(4)\\\">>>></button>\\r\\n  </div>\\r\\n  <div class=\\\"itemBoardBtn6\\\">\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(4)\\\"><<<</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onSell(5)\\\">Sell</button>\\r\\n    <button class=\\\"button\\\" (click)=\\\"onMoveRight(5)\\\">>>></button>\\r\\n  </div>\\r\\n  <div class=\\\"itemHand1\\\">\\r\\n    <button *ngIf=\\\"isCreatureInSlot(0)\\\" class=\\\"button\\\" (click)=\\\"toggleSelection()\\\">{{getCurrentSelection()}}</button>\\r\\n  </div>  \\r\\n  <div class=\\\"itemHand2\\\">\\r\\n    <button *ngIf=\\\"isCreatureInSlot(1)\\\" class=\\\"button\\\" (click)=\\\"toggleSelection()\\\">{{getCurrentSelection()}}</button>\\r\\n  </div>\\r\\n  <div class=\\\"itemHand3\\\">\\r\\n    <button *ngIf=\\\"isCreatureInSlot(2)\\\" class=\\\"button\\\" (click)=\\\"toggleSelection()\\\">{{getCurrentSelection()}}</button>\\r\\n  </div>  \\r\\n  <div class=\\\"itemHand4\\\">\\r\\n    <button *ngIf=\\\"isCreatureInSlot(3)\\\" class=\\\"button\\\" (click)=\\\"toggleSelection()\\\">{{getCurrentSelection()}}</button>\\r\\n  </div>  \\r\\n  <div class=\\\"itemHand5\\\">\\r\\n    <button *ngIf=\\\"isCreatureInSlot(4)\\\" class=\\\"button\\\" (click)=\\\"toggleSelection()\\\">{{getCurrentSelection()}}</button>\\r\\n  </div>  \\r\\n  <div class=\\\"itemHand6\\\">\\r\\n    <button *ngIf=\\\"isCreatureInSlot(5)\\\" class=\\\"button\\\" (click)=\\\"toggleSelection()\\\">{{getCurrentSelection()}}</button>\\r\\n  </div>  \\r\\n\\r\\n</div>\\r\\n\\r\\n<p>Creature in Current Pool:  {{this.localGameState.creaturePool.tier1.length}}</p>\\r\\n<p>Turn = {{this.localGameState.turn}}</p>\\r\\n\\r\\n</body>\\r\\n</html>\\r\\n\"","export default \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n</head>\\r\\n<body>\\r\\n    <div class=\\\"fullscreen-image\\\">\\r\\n        <img src=\\\"../../assets/img/goglogin.png\\\" alt=\\\"Full Screen Image\\\" (click) = \\\"onStartGame()\\\">\\r\\n    </div>\\r\\n</body>\\r\\n</html>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Creature } from './creature';\r\n\r\nexport class TavernCreature {\r\n    id: number;\r\n    creature: Creature;\r\n    sold:  boolean;\r\n    poolSlot: number;\r\n\r\n    constructor(id, creature, poolSlot) {\r\n        this.id = id;\r\n        this.creature = creature;\r\n        console.log('aaa = ' + this.creature.getName());\r\n        this.sold = false;\r\n        this.poolSlot = poolSlot;\r\n        console.log(this.sold);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"h1{\\r\\n\\tbackground-color: grey;\\r\\n\\tmargin-top:0;\\r\\n\\tpadding: 20px;\\r\\n\\tfont-size:1.6em;\\r\\n\\tfont-family: Arial;\\r\\n\\tcolor:white;\\r\\n}\\r\\n\\r\\n.rotate45 {\\r\\n    transform: rotate(45deg);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxzQkFBc0I7Q0FDdEIsWUFBWTtDQUNaLGFBQWE7Q0FDYixlQUFlO0NBQ2Ysa0JBQWtCO0NBQ2xCLFdBQVc7QUFDWjs7QUFFQTtJQUtJLHdCQUF3QjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDF7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogZ3JleTtcclxuXHRtYXJnaW4tdG9wOjA7XHJcblx0cGFkZGluZzogMjBweDtcclxuXHRmb250LXNpemU6MS42ZW07XHJcblx0Zm9udC1mYW1pbHk6IEFyaWFsO1xyXG5cdGNvbG9yOndoaXRlO1xyXG59XHJcblxyXG4ucm90YXRlNDUge1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSg0NTBkZWcpO1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAtby10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG59Il19 */\"","import { Component } from '@angular/core';\r\nimport { Player } from './player.model';\r\nimport {GameState} from './gameState.model';\r\nimport { CreaturePool } from './creaturePool.model';\r\nimport { Creature, CreatureType } from './creature';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  gameState;\r\n  title = 'gog';\r\n  name = '';\r\n  log = '';\r\n  textValue = 'initial value';\r\n\r\n  ngOnInit() {\r\n    let playerList: Player[] = [];\r\n    let player = new Player(\"matt\", false);\r\n\r\n\r\n    playerList.push(player);\r\n\r\n    // Generate Computer Players\r\n    for (var i = 1; i < 8; i++) {\r\n      var playerName: string = \"Player\" + i;\r\n      let compPlayer = new Player(playerName, true);      \r\n      playerList.push(compPlayer);\r\n    }\r\n    \r\n    var emptyCreaturePool: CreaturePool = new CreaturePool;\r\n    this.gameState = new GameState(0, 1, playerList, emptyCreaturePool);\r\n    this.createInitialCreaturePool();\r\n    this.gameState.playerList = playerList;\r\n    this.gameState.turn = 1;\r\n    this.gameState.stage = 1;\r\n  }\r\n\r\n  logText(value: string): void {\r\n    this.log += `Text changed to '${value}'\\n`;\r\n  }\r\n\r\n  logCheckbox(element: HTMLInputElement): void {\r\n    this.log += `Checkbox ${element.value} was ${element.checked ? '' : 'un'}checked\\n`;\r\n  }\r\n\r\n\r\n  createInitialCreaturePool(): Creature[] {\r\n    let creatureList: Creature[] = [];\r\n    console.log('herea');\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Gnome);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Goblin);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Kobold);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Dwarf);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.SkeletonWarrior);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Orc);\r\n    this.gameState.creaturePool.addCreatureToPool(8, CreatureType.InfestedRat);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.FrostGiant);\r\n\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.TreeOfLife);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Wizard);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Necromancer);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Archer);\r\n    this.gameState.creaturePool.addCreatureToPool(3, CreatureType.Bard);\r\n\r\n    this.gameState.creaturePool.addCreatureToPool(1, CreatureType.Genie);\r\n    this.gameState.creaturePool.addCreatureToPool(1, CreatureType.Sorcerous);\r\n\r\n    return creatureList;\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TavernAppComponent } from './tavern-app/tavern-app.component';\r\nimport { TitleScreenAppComponent } from './title-screen-app/title-screen-app.component';\r\n\r\nimport { BattleScreenComponent } from './battle-screen/battle-screen.component';\r\nimport { BattleScreenBossComponent } from './battle-screen-boss/battle-screen-boss.component';\r\nimport { BattleScreenQuestComponent } from './battle-screen-quest/battle-screen-quest.component';\r\nimport { ScoreScreenComponent } from './score-screen/score-screen.component';\r\nimport { SelectQuestComponent } from './select-quest/select-quest.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TavernAppComponent,\r\n    TitleScreenAppComponent,\r\n    BattleScreenComponent,\r\n    BattleScreenBossComponent,\r\n    BattleScreenQuestComponent,\r\n    SelectQuestComponent,\r\n    ScoreScreenComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \".button {\\r\\n    border:  none;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    background: blue;\\r\\n    color: #fff;\\r\\n    padding: 0.4em 0.6em;\\r\\n    font-size: 0.8em;\\r\\n    border-radius: 1em;\\r\\n  }\\r\\n\\r\\n  button:disabled {\\r\\n    background: #dddddd;\\r\\n  }\\r\\n\\r\\n  p {\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmF0dGxlLXNjcmVlbi1ib3NzL2JhdHRsZS1zY3JlZW4tYm9zcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9iYXR0bGUtc2NyZWVuLWJvc3MvYmF0dGxlLXNjcmVlbi1ib3NzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uIHtcclxuICAgIGJvcmRlcjogIG5vbmU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kOiBibHVlO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBwYWRkaW5nOiAwLjRlbSAwLjZlbTtcclxuICAgIGZvbnQtc2l6ZTogMC44ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxZW07XHJcbiAgfVxyXG5cclxuICBidXR0b246ZGlzYWJsZWQge1xyXG4gICAgYmFja2dyb3VuZDogI2RkZGRkZDtcclxuICB9IFxyXG4gIFxyXG4gIHAge1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GameState } from '../gameState.model';\r\nimport { Battle } from '../battle';\r\nimport { Player } from '../player.model';\r\nimport { Creature, CreatureType } from '../creature';\r\n\r\n\r\n@Component({\r\n  selector: 'app-battle-screen-boss',\r\n  templateUrl: './battle-screen-boss.component.html',\r\n  styleUrls: ['./battle-screen-boss.component.css']\r\n})\r\nexport class BattleScreenBossComponent implements OnInit {\r\n\r\n  @Input() localGameState: GameState;\r\n\r\n  battleLogs: String[] = [];\r\n  battleLogsDetail: String[] = [];\r\n  battleLogsResult: String[] = [];\r\n  logsToggle: boolean = true;\r\n  titleLog: String;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.battleLogs = [];\r\n    this.battleLogsResult = [];\r\n    this.battleLogsDetail = [];\r\n\r\n    let playerIndexList: number[] = [];\r\n    for (var i : number = 1; i < 8; i++) {\r\n      playerIndexList.push(i);\r\n    }\r\n    let randomPlayerList = this.shuffle(playerIndexList);\r\n    randomPlayerList.push(0);\r\n    console.log('randomPlayerList: ' + randomPlayerList);\r\n\r\n    // Perform Matches\r\n    for (var playerIndex = this.localGameState.playerList.length - 1; playerIndex >= 0; playerIndex--) {\r\n      this.titleLog = \"\";\r\n      this.battleLogs = [];\r\n\r\n      var boss : Player = new Player(\"Boss\", true);\r\n      boss.creatureList.push(new Creature(CreatureType.CarrionCrawler));\r\n\r\n      // console.log('slotTeam2=' + slotTeam2 + ' playerList[slotTeam2].name=' + this.localGameState.playerList[slotTeam2].name);\r\n\r\n      var battle: Battle = new Battle(this.localGameState.playerList[playerIndex], boss);\r\n\r\n      battle.performBattle();\r\n      var winner = battle.getWinner();\r\n      this.battleLogsDetail = battle.getBattleLogs();\r\n      var dmgDone1 = battle.getDamageDone(0);\r\n      var dmgDone2 = battle.getDamageDone(1);\r\n\r\n      console.log('dmgDones = ' + dmgDone1 + ', ' + dmgDone2);\r\n\r\n      this.localGameState.playerList[playerIndex].incrementDmgDone(dmgDone1);\r\n      this.battleLogsResult.splice(0, this.battleLogsResult.length);  // clear\r\n\r\n      if (winner === 0) {\r\n        this.battleLogsResult.push(\r\n          this.localGameState.playerList[playerIndex].name + \" (1)\" + \" beats \" + boss.name + \".\"\r\n        );\r\n        this.localGameState.playerList[playerIndex].gold += 100;\r\n      } else if (winner === 1) {\r\n        this.battleLogsResult.push(\r\n          boss.name + \" (2)\" +  \" beats \" + this.localGameState.playerList[playerIndex].name + \".\"\r\n        );\r\n      } else {\r\n        this.battleLogsResult.push(\r\n          this.localGameState.playerList[playerIndex].name + \" ties with \" + boss.name + \".\"\r\n        );\r\n      }\r\n      \r\n      this.battleLogs = this.battleLogsResult;\r\n\r\n      // var slotLoser:number;\r\n      // var slotWinner:number\r\n\r\n      // if (winner === 0 ) {\r\n      //   slotLoser = slotTeam2;\r\n      //   slotWinner = slotTeam1;\r\n      //   this.localGameState.playerList[slotWinner].incrementWins();\r\n      //   this.localGameState.playerList[slotLoser].incrementLoses();\r\n      //   this.battleLogs.push(\r\n      //     this.localGameState.playerList[slotWinner].name + \" (1)\" + \" beats \" + this.localGameState.playerList[slotLoser].name + \".\"\r\n      //   );\r\n      // --this.localGameState.playerList[slotLoser].life;\r\n      // } else if (winner === 1) {\r\n      //     slotLoser = slotTeam1;\r\n      //     slotWinner = slotTeam2;\r\n      //     this.localGameState.playerList[slotWinner].incrementWins();\r\n      //     this.localGameState.playerList[slotLoser].incrementLoses();\r\n      //     this.battleLogs.push(\r\n      //       this.localGameState.playerList[slotWinner].name + \" (2)\" +  \" beats \" + this.localGameState.playerList[slotLoser].name + \".\"\r\n      //     );\r\n      //   --this.localGameState.playerList[slotLoser].life;\r\n      // } else {\r\n      //   this.localGameState.playerList[slotTeam1].incrementTies();\r\n      //   this.localGameState.playerList[slotTeam2].incrementTies();\r\n      //   this.battleLogs.push(\r\n      //     this.localGameState.playerList[slotTeam1].name + \" ties with \" + this.localGameState.playerList[slotTeam2].name + \".\"\r\n      //   );\r\n      // }\r\n      \r\n    }\r\n  }\r\n  \r\n  shuffle <T>(array: T[]): T[] {\r\n    let currentIndex = array.length,  randomIndex;\r\n\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex != 0) {\r\n  \r\n      // Pick a remaining element.\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n  \r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n};\r\n\r\nonToggleBattleLog() {\r\n  if (this.logsToggle) {\r\n    this.battleLogs = this.battleLogsDetail;\r\n  } else {\r\n    this.battleLogs = this.battleLogsResult;\r\n  }\r\n  this.logsToggle = !this.logsToggle;\r\n}\r\n\r\nonNext() {\r\n    ++this.localGameState.stage;\r\n  }\r\n\r\n}\r\n","export default \".button {\\r\\n    border:  none;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    background: blue;\\r\\n    color: #fff;\\r\\n    padding: 0.4em 0.6em;\\r\\n    font-size: 0.8em;\\r\\n    border-radius: 1em;\\r\\n  }\\r\\n\\r\\n  button:disabled {\\r\\n    background: #dddddd;\\r\\n  }\\r\\n\\r\\n  p {\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmF0dGxlLXNjcmVlbi1xdWVzdC9iYXR0bGUtc2NyZWVuLXF1ZXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7RUFDZCIsImZpbGUiOiJzcmMvYXBwL2JhdHRsZS1zY3JlZW4tcXVlc3QvYmF0dGxlLXNjcmVlbi1xdWVzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbiB7XHJcbiAgICBib3JkZXI6ICBub25lO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYmFja2dyb3VuZDogYmx1ZTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMC40ZW0gMC42ZW07XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMWVtO1xyXG4gIH1cclxuXHJcbiAgYnV0dG9uOmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQ6ICNkZGRkZGQ7XHJcbiAgfSBcclxuICBcclxuICBwIHtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gIH0iXX0= */\"","import { QuestRewardType } from './../quest-rewards';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { GameState } from '../gameState.model';\r\nimport { Battle } from '../battle';\r\nimport { Player } from '../player.model';\r\nimport { Creature, CreatureType } from '../creature';\r\nimport * as Q from 'q';\r\nimport Utils from '../utils';\r\n\r\n\r\n@Component({\r\n  selector: 'app-battle-screen-quest',\r\n  templateUrl: './battle-screen-quest.component.html',\r\n  styleUrls: ['./battle-screen-quest.component.css']\r\n})\r\nexport class BattleScreenQuestComponent implements OnInit {\r\n\r\n  @Input() localGameState: GameState;\r\n\r\n  battleLogs: String[] = [];\r\n  battleLogsDetail: String[] = [];\r\n  battleLogsResult: String[] = [];\r\n  logsToggle: boolean;\r\n  titleLog: String;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.battleLogs = [];\r\n    this.battleLogsResult = [];\r\n    this.battleLogsDetail = [];\r\n    this.logsToggle = true;\r\n\r\n    let playerIndexList: number[] = [];\r\n    for (var i : number = 1; i < 8; i++) {\r\n      playerIndexList.push(i);\r\n    }\r\n    let randomPlayerList = this.shuffle(playerIndexList);\r\n    randomPlayerList.push(0);\r\n    console.log('randomPlayerList: ' + randomPlayerList);\r\n\r\n      var questPlayer : Player = new Player(\"Quest\", true);\r\n      for (var i = 0; i< this.localGameState.playerList[0].questUnits; i++) {\r\n        questPlayer.creatureList.push(new Creature(this.localGameState.playerList[0].questCreature.creatureType));\r\n      }\r\n\r\n      var battle: Battle = new Battle(this.localGameState.playerList[0], questPlayer);\r\n\r\n      battle.performBattle();\r\n      var winner = battle.getWinner();\r\n      this.battleLogsDetail = battle.getBattleLogs();\r\n      var dmgDone1 = battle.getDamageDone(0);\r\n      var dmgDone2 = battle.getDamageDone(1);\r\n\r\n      console.log('dmgDones = ' + dmgDone1 + ', ' + dmgDone2);\r\n\r\n      if (winner === 0) {\r\n        switch(this.localGameState.playerList[0].questReward) {\r\n          case QuestRewardType['Gold - 10g']:\r\n            this.localGameState.playerList[0].gold += 10; break;\r\n          case QuestRewardType['Gold - 25g']:\r\n            this.localGameState.playerList[0].gold += 25; break;\r\n          case QuestRewardType['Gold - 50g']:\r\n            this.localGameState.playerList[0].gold += 50; break;\r\n          case QuestRewardType['Gold - 75g']:\r\n            this.localGameState.playerList[0].gold += 75; break;\r\n          case QuestRewardType['Gold - 100g']:\r\n            this.localGameState.playerList[0].gold += 100; break;\r\n          case QuestRewardType['Extra Refresh']:\r\n            this.localGameState.playerList[0].refreshCounter += 1; break;\r\n          case QuestRewardType['Recruit Unit']:\r\n            this.localGameState.creaturePool.addCreatureToPool(1, Utils.upgradeRecruitment())\r\n            break;\r\n          case QuestRewardType['Remove Infested Rat']:\r\n            console.log('tier1 len = ' + this.localGameState.creaturePool.tier1.length);\r\n            var slot = Utils.findFirstRatSlot(this.localGameState.creaturePool.tier1);\r\n            console.log('slot = ' + slot);\r\n            if (slot > 0 && slot < this.localGameState.creaturePool.tier1.length) {\r\n              console.log('tier1 len = ' + this.localGameState.creaturePool.tier1.length);\r\n              this.localGameState.creaturePool.removeCreatureFromPool(slot);\r\n              console.log('tier1 len = ' + this.localGameState.creaturePool.tier1.length);\r\n            }\r\n            break;\r\n          default:\r\n            console.log('error:  should never get here');\r\n        }\r\n      this.battleLogsResult.push( this.localGameState.playerList[0].name + \" completes the quest.\");\r\n      \r\n    } else {\r\n      this.battleLogsResult.push( this.localGameState.playerList[0].name + \" fails the quest.\");\r\n\r\n    }\r\n    this.battleLogs = this.battleLogsResult;\r\n\r\n  }\r\n  \r\n  shuffle <T>(array: T[]): T[] {\r\n    let currentIndex = array.length,  randomIndex;\r\n\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex != 0) {\r\n  \r\n      // Pick a remaining element.\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n  \r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n};\r\n\r\nonToggleBattleLog() {\r\n  if (this.logsToggle) {\r\n    this.battleLogs = this.battleLogsDetail;\r\n  } else {\r\n    this.battleLogs = this.battleLogsResult;\r\n  }\r\n  this.logsToggle = !this.logsToggle;\r\n}\r\n\r\nonNext() {\r\n    ++this.localGameState.stage;\r\n  }\r\n\r\n}\r\n","export default \".button {\\r\\n    border:  none;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    background: blue;\\r\\n    color: #fff;\\r\\n    padding: 0.4em 0.6em;\\r\\n    font-size: 0.8em;\\r\\n    border-radius: 1em;\\r\\n  }\\r\\n\\r\\n  button:disabled {\\r\\n    background: #dddddd;\\r\\n  }\\r\\n\\r\\n  p {\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmF0dGxlLXNjcmVlbi9iYXR0bGUtc2NyZWVuLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7RUFDZCIsImZpbGUiOiJzcmMvYXBwL2JhdHRsZS1zY3JlZW4vYmF0dGxlLXNjcmVlbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbiB7XHJcbiAgICBib3JkZXI6ICBub25lO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYmFja2dyb3VuZDogYmx1ZTtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMC40ZW0gMC42ZW07XHJcbiAgICBmb250LXNpemU6IDAuOGVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMWVtO1xyXG4gIH1cclxuXHJcbiAgYnV0dG9uOmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQ6ICNkZGRkZGQ7XHJcbiAgfSBcclxuICBcclxuICBwIHtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gIH0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GameState } from '../gameState.model';\r\nimport { Battle } from '../battle';\r\n\r\n\r\n@Component({\r\n  selector: 'app-battle-screen',\r\n  templateUrl: './battle-screen.component.html',\r\n  styleUrls: ['./battle-screen.component.css']\r\n})\r\nexport class BattleScreenComponent implements OnInit {\r\n\r\n  @Input() localGameState: GameState;\r\n\r\n  battleLogs: String[] = [];\r\n  battleLogsDetail: String[] = [];\r\n  battleLogsResult: String[] = [];\r\n  logsToggle: boolean;\r\n  titleLog: String;\r\n  battle: Battle;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.battleLogs = [];\r\n    this.battleLogsResult = [];\r\n    this.logsToggle = true;\r\n\r\n    let playerIndexList: number[] = [];\r\n    for (var i : number = 1; i < 8; i++) {\r\n      playerIndexList.push(i);\r\n    }\r\n    let randomPlayerList = this.shuffle(playerIndexList);\r\n    randomPlayerList.push(0);\r\n    console.log('randomPlayerList: ' + randomPlayerList);\r\n\r\n    // Perform Matches\r\n    for (var matchIndex = 0; matchIndex < 4; matchIndex++) {\r\n      this.titleLog = \"\";\r\n      this.battleLogs = [];\r\n\r\n      const slotTeam1:number = randomPlayerList[0 + matchIndex*2];\r\n      const slotTeam2:number = randomPlayerList[1 + matchIndex*2];\r\n\r\n      console.log('slotTeam1=' + slotTeam1 + ' playerList[slotTeam1].name=' + this.localGameState.playerList[slotTeam1].name);\r\n      console.log('slotTeam2=' + slotTeam2 + ' playerList[slotTeam2].name=' + this.localGameState.playerList[slotTeam2].name);\r\n\r\n      this.battle = new Battle(this.localGameState.playerList[slotTeam1], this.localGameState.playerList[slotTeam2]);\r\n\r\n      this.battle.performBattle();\r\n      var winner = this.battle.getWinner();\r\n      this.battleLogsDetail = this.battle.getBattleLogs();\r\n      var dmgDone1 = this.battle.getDamageDone(0);\r\n      var dmgDone2 = this.battle.getDamageDone(1);\r\n\r\n      console.log('dmgDones = ' + dmgDone1 + ', ' + dmgDone2);\r\n\r\n      // this.localGameState.playerList[slotTeam1].\r\n\r\n      var slotLoser:number;\r\n      var slotWinner:number\r\n\r\n      this.battleLogsResult.splice(0, this.battleLogsResult.length);  // clear\r\n      if (winner === 0 ) {\r\n        slotLoser = slotTeam2;\r\n        slotWinner = slotTeam1;\r\n        this.localGameState.playerList[slotWinner].incrementWins();\r\n        this.localGameState.playerList[slotLoser].incrementLoses();\r\n        this.battleLogsResult.push(\r\n          this.localGameState.playerList[slotWinner].name + \" (1)\" + \" beats \" + this.localGameState.playerList[slotLoser].name + \".\"\r\n        );\r\n      --this.localGameState.playerList[slotLoser].life;\r\n      } else if (winner === 1) {\r\n          slotLoser = slotTeam1;\r\n          slotWinner = slotTeam2;\r\n          this.localGameState.playerList[slotWinner].incrementWins();\r\n          this.localGameState.playerList[slotLoser].incrementLoses();\r\n          this.battleLogsResult.push(\r\n            this.localGameState.playerList[slotWinner].name + \" (2)\" +  \" beats \" + this.localGameState.playerList[slotLoser].name + \".\"\r\n          );\r\n        --this.localGameState.playerList[slotLoser].life;\r\n      } else {\r\n        this.localGameState.playerList[slotTeam1].incrementTies();\r\n        this.localGameState.playerList[slotTeam2].incrementTies();\r\n        this.battleLogsResult.push(\r\n          this.localGameState.playerList[slotTeam1].name + \" ties with \" + this.localGameState.playerList[slotTeam2].name + \".\"\r\n        );\r\n      }\r\n      \r\n    }\r\n    this.battleLogs = this.battleLogsResult;\r\n  }\r\n  \r\n  shuffle <T>(array: T[]): T[] {\r\n    let currentIndex = array.length,  randomIndex;\r\n\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex != 0) {\r\n  \r\n      // Pick a remaining element.\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n  \r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n};\r\n\r\nonToggleBattleLog() {\r\n  if (this.logsToggle) {\r\n    this.battleLogs = this.battleLogsDetail;\r\n  } else {\r\n    this.battleLogs = this.battleLogsResult;\r\n  }\r\n  this.logsToggle = !this.logsToggle;\r\n}\r\n\r\nonNext() {\r\n    ++this.localGameState.stage;\r\n  }\r\n\r\n}\r\n","import { Creature, CreatureType } from './creature';\r\nimport { Player } from './player.model';\r\n\r\nexport class Battle {\r\n    player1: Player;\r\n    player2: Player;\r\n\r\n    titleLog: string;\r\n    battleLogs: string[] = [];\r\n\r\n    creatureListTeam1: Creature[] = [];\r\n    creatureListTeam2: Creature[] = [];\r\n\r\n    pDamageDoneTeam1: number = 0;\r\n    mDamageDoneTeam1: number = 0;\r\n    pDamageDoneTeam2: number = 0;\r\n    mDamageDoneTeam2: number = 0;\r\n\r\n    constructor(player1: Player, player2: Player) {\r\n        this.player1 = player1;\r\n        this.player2 = player2;\r\n    }\r\n\r\n    getNumberOf(team: Creature[], creatureType: CreatureType) {\r\n      var total: number = 0;\r\n      for (var i = 0; i< team.length; i++) {\r\n        if (team[i].creatureType === creatureType) {\r\n          total++;\r\n        }\r\n      }\r\n      return total;\r\n    }\r\n\r\n    getCharismaCount(team: Creature[]): number {\r\n      var count: number = 0;\r\n      for (var i = 0; i < team.length; i++) {\r\n        if (team[i].getCreatureStats().charisma >= 16) {\r\n          count++;\r\n        }\r\n      }\r\n      console.log('returning char count = ' + count);\r\n      return count;\r\n    }\r\n\r\n    getRevivalCount(team: Creature[]): number {\r\n      var count: number = 0;\r\n      for (var i = 0; i < team.length; i++) {\r\n          count+= team[i].getCurrentStats().revivals;\r\n      }\r\n      console.log('returning char count = ' + count);\r\n      return count;\r\n    }\r\n\r\n\r\n    preCombatBuffs() {\r\n      var necrosOnTeam1: number = this.getNumberOf(this.creatureListTeam1, CreatureType.Necromancer);\r\n      var necrosOnTeam2: number = this.getNumberOf(this.creatureListTeam2, CreatureType.Necromancer);\r\n      for (var i = 0; i< necrosOnTeam1; i++) {\r\n        if (this.creatureListTeam1[i].getCurrentStats().revivals > 0) {\r\n          this.creatureListTeam1[i].getCurrentStats().revivals += necrosOnTeam1;\r\n        }\r\n      }\r\n      for (var i = 0; i< necrosOnTeam2; i++) {\r\n        if (this.creatureListTeam2[i].getCurrentStats().revivals > 0) {\r\n          this.creatureListTeam2[i].getCurrentStats().revivals += necrosOnTeam2;\r\n        }\r\n      }\r\n      var highCharismaCountTeam1: number = this.getCharismaCount(this.creatureListTeam1);\r\n \r\n      var highCharismaCountTeam2: number = this.getCharismaCount(this.creatureListTeam2);\r\n      var rivialCountTeam1: number = this.getRevivalCount(this.creatureListTeam1);\r\n      var rivialCountTeam2: number = this.getRevivalCount(this.creatureListTeam2);\r\n\r\n      for (var i = 0; i< this.creatureListTeam1.length; i++) {\r\n        if (this.creatureListTeam1[i].creatureType === CreatureType.Elaron) {\r\n          this.creatureListTeam1[i].getCurrentStats().magicAttack = 5 * highCharismaCountTeam1;\r\n        }\r\n        if (this.creatureListTeam1[i].creatureType === CreatureType.Mortiserion) {\r\n          this.creatureListTeam1[i].getCurrentStats().attack = 5 * rivialCountTeam1;\r\n          this.creatureListTeam1[1].getCurrentStats().magicAttack = rivialCountTeam1;\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i< this.creatureListTeam2.length; i++) {\r\n        if (this.creatureListTeam2[i].creatureType === CreatureType.Elaron) {\r\n          this.creatureListTeam2[i].getCurrentStats().magicAttack = 5 * highCharismaCountTeam2;\r\n        }\r\n        if (this.creatureListTeam2[i].creatureType === CreatureType.Mortiserion) {\r\n          this.creatureListTeam2[i].getCurrentStats().attack = 5 * rivialCountTeam2;\r\n          this.creatureListTeam2[1].getCurrentStats().magicAttack = rivialCountTeam2;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    performBattle() {\r\n\r\n          // For some reason val=>Object.get creates a copy, but doesn't copy the methods that go along with the class\r\n          this.player1.creatureList.forEach(val => this.creatureListTeam1.push(val.getCopy()));\r\n          this.player2.creatureList.forEach(val => this.creatureListTeam2.push(val.getCopy()));\r\n          \r\n          var done: boolean = false;\r\n    \r\n          this.titleLog = \r\n            this.player1.name + \"(\" + this.player1.creatureList.length + \")  vs. \" \r\n            + this.player2.name + \"(\" + this.player2.creatureList.length + \")\";\r\n    \r\n          for (var i1 = 0; i1< this.creatureListTeam1.length; i1++) {\r\n            this.creatureListTeam1[i1].preCombat();\r\n          }\r\n    \r\n          for (var i2 = 0; i2< this.creatureListTeam2.length; i2++) {\r\n            this.creatureListTeam2[i2].preCombat();\r\n          }\r\n\r\n          this.preCombatBuffs();\r\n    \r\n          if (this.creatureListTeam1.length === 0 || this.creatureListTeam2.length === 0) {\r\n            done = true;\r\n          }\r\n    \r\n          var isTurnTeam1 = this.doesTeamOneGoFirst(this.creatureListTeam1, this.creatureListTeam2); \r\n          \r\n          var loopTimeOutCounter = 0;\r\n          var attackPosTeam1: number = 0, attackPosTeam2: number = 0;\r\n    \r\n          while (!done) {\r\n            loopTimeOutCounter++;\r\n            if (loopTimeOutCounter > 1000) {\r\n              done = true;\r\n            }\r\n    \r\n            console.log('isTurnTeam1 = ' + isTurnTeam1);\r\n    \r\n            console.log('attackPosTeam1 = ' + attackPosTeam1 + ', team1.size = ' + this.creatureListTeam1.length + ', team2.size = ' + this.creatureListTeam2.length);\r\n            if (isTurnTeam1) {\r\n              this.performAttack(isTurnTeam1, this.creatureListTeam1, attackPosTeam1, this.creatureListTeam2, this.player1.name, this.player2.name);\r\n              attackPosTeam1++;\r\n              if (attackPosTeam1 > this.creatureListTeam1.length -1) { attackPosTeam1 = 0; }\r\n            } else {\r\n              this.performAttack(isTurnTeam1, this.creatureListTeam2, attackPosTeam2, this.creatureListTeam1, this.player2.name, this.player1.name);\r\n              attackPosTeam2++;\r\n              if (attackPosTeam2 > this.creatureListTeam2.length -1) { attackPosTeam2 = 0; }\r\n            }\r\n            isTurnTeam1 = !isTurnTeam1;\r\n    \r\n            this.creatureListTeam1 = this.processRevivals(this.creatureListTeam1, this.player1.name);\r\n            this.creatureListTeam2 = this.processRevivals(this.creatureListTeam2, this.player2.name);\r\n            var deathsOnTeam1: number[] = this.getDeathsOnTeam(this.creatureListTeam1);\r\n            var deathsonTeam2: number[] = this.getDeathsOnTeam(this.creatureListTeam2);\r\n    \r\n            if (deathsOnTeam1.length > 0 && deathsonTeam2.length > 0) {\r\n              this.battleLogs.push(\r\n                \"...\" + this.creatureListTeam1[0].getName() + \" & \" + this.creatureListTeam2[0].getName() + \" die\"\r\n              );\r\n              var slotThatDied1: number = 0;\r\n              if (slotThatDied1 < attackPosTeam1) {\r\n                attackPosTeam1--;\r\n              }\r\n              var slotThatDied2: number = 0;\r\n              if (slotThatDied2 < attackPosTeam2) {\r\n                attackPosTeam2--;\r\n              }\r\n              this.creatureListTeam1.splice(0, 1);\r\n              this.creatureListTeam2.splice(0, 1);\r\n            } else {\r\n              if (deathsOnTeam1.length > 0) {\r\n                this.battleLogs.push(\r\n                  \"...\" + this.creatureListTeam1[0].getName() + \" (1) dies\"\r\n                );\r\n                var slotThatDied1: number = 0;\r\n              if (slotThatDied1 < attackPosTeam1) {\r\n                attackPosTeam1--;\r\n              }\r\n              \r\n                this.creatureListTeam1.splice(0, 1);\r\n              }\r\n      \r\n              if (deathsonTeam2.length > 0) {\r\n                this.battleLogs.push(\r\n                  \"...\" + this.creatureListTeam2[0].getName() + \" (2) dies\"\r\n                );\r\n                var slotThatDied2: number = 0;\r\n                if (slotThatDied2 < attackPosTeam2) {\r\n                  attackPosTeam2--;\r\n                }\r\n                this.creatureListTeam2.splice(0,1);\r\n              }        \r\n            }  \r\n    \r\n            if (this.creatureListTeam1.length === 0 || this.creatureListTeam2.length === 0 ) {\r\n              done = true;\r\n            }\r\n          }\r\n    }\r\n\r\n    getWinner() : number {\r\n        var winner:number = -1;  // assume tie\r\n        if (this.creatureListTeam1.length === 0 && this.creatureListTeam2.length > 0 ) {\r\n          winner = 1;\r\n        } else if (this.creatureListTeam1.length > 0 && this.creatureListTeam2.length === 0 ) {\r\n          winner = 0;\r\n        }\r\n        return winner;\r\n    }\r\n\r\n    getBattleLogs(): string[] { console.log('bl.len = ' + this.battleLogs.length); return this.battleLogs; }\r\n\r\n    processRevivals(team: Creature[], playersName) : Creature[] {\r\n      for (var i = 0; i < team.length; i++) {\r\n        console.log('revivals = ' + team[i].getCurrentStats().revivals);\r\n        if (team[i].getCurrentStats().life < 1 && team[i].getCurrentStats().revivals > 0) {\r\n          team[i].getCurrentStats().revivals--;\r\n          team[i].getCurrentStats().life = team[i].getCreatureStats().life / 2;\r\n          console.log('new life total = ' + team[i].getCurrentStats().life + ', ' + team[i].getCreatureStats().life);\r\n          this.battleLogs.push(\"...\" + team[i].getName() + \"(\" + playersName + \") dies, but revives at half health.\");\r\n        }\r\n      }\r\n      return team;\r\n    }\r\n\r\n    getDeathsOnTeam(team: Creature[]) : number[] {\r\n        var deaths: number[] = [];\r\n        for (var i = 0; i < team.length; i++) {\r\n          if (team[i].getCurrentStats().life < 1) {\r\n              deaths.push(i);\r\n          }\r\n        }\r\n        return deaths;\r\n      }\r\n\r\n    performAttack(isTurnTeam1: boolean, creatureListAttackTeam: Creature[], attackTeamPos: number, creatureListDefenderTeam: Creature[], attackPlayerName: string, defendPlayerName: string) {    \r\n        if (creatureListAttackTeam[attackTeamPos].getArmorBuff() > 0 && creatureListAttackTeam[attackTeamPos].currentArmorBuffUsed == false) {\r\n          for(var i = 0; i< creatureListAttackTeam.length; i++) {\r\n            creatureListAttackTeam[i].getCurrentStats().armor += creatureListAttackTeam[attackTeamPos].getArmorBuff();\r\n          }\r\n          creatureListAttackTeam[attackTeamPos].currentArmorBuffUsed = true;\r\n\r\n          this.logBuffAction(attackPlayerName, creatureListAttackTeam[attackTeamPos].getName());\r\n        } else if (creatureListAttackTeam[attackTeamPos].getLifeBuff() > 0 && creatureListAttackTeam[attackTeamPos].currentLifeBuffUsed == false) {\r\n              for(var i = 0; i< creatureListAttackTeam.length; i++) {\r\n                creatureListAttackTeam[i].getCurrentStats().life += creatureListAttackTeam[attackTeamPos].getLifeBuff();\r\n              }\r\n              creatureListAttackTeam[attackTeamPos].currentLifeBuffUsed = true;\r\n              this.logBuffAction(attackPlayerName, creatureListAttackTeam[attackTeamPos].getName());\r\n        } else {\r\n        \r\n\r\n        if (creatureListAttackTeam[attackTeamPos].getCurrentStats().attack > 0) {\r\n          var dmgDone = this.performPhysicalAttack(creatureListAttackTeam, attackTeamPos, creatureListDefenderTeam, attackPlayerName, defendPlayerName);\r\n          if (isTurnTeam1) { this.pDamageDoneTeam1+= dmgDone; } else { this.pDamageDoneTeam2+=dmgDone;}\r\n        }\r\n        if (creatureListAttackTeam[attackTeamPos].getCurrentStats().magicAttack > 0 ) {\r\n          var dmgDone = this.performMagicAttack(creatureListAttackTeam, attackTeamPos, creatureListDefenderTeam, attackPlayerName, defendPlayerName);\r\n          if (isTurnTeam1) { this.mDamageDoneTeam1+= dmgDone; } else { this.mDamageDoneTeam2+=dmgDone;}\r\n        }\r\n        \r\n      }              \r\n}\r\n\r\ngetDamageDone(team: number) {\r\n    if (team === 0) {\r\n        return this.pDamageDoneTeam1 + this.mDamageDoneTeam1;\r\n    } else {\r\n        return this.pDamageDoneTeam2 + this.mDamageDoneTeam2;\r\n    }\r\n}\r\n\r\nperformPhysicalAttack(creatureListAttackTeam: Creature[], attackTeamPos: number, creatureListDefenderTeam: Creature[], attackPlayerName: string, defendPlayerName: string)\r\n: number {\r\n    var dodgedDefenderTeam: boolean = this.doesDefenderDodge(creatureListDefenderTeam[0].getCurrentStats().dex);\r\n    var dmgDone = 0;\r\n    if (!dodgedDefenderTeam) {\r\n        dmgDone = this.getDamageAfterArmorCheck(creatureListAttackTeam, attackTeamPos, creatureListDefenderTeam);\r\n        creatureListDefenderTeam[0].getCurrentStats().life = creatureListDefenderTeam[0].getCurrentStats().life - dmgDone;\r\n        this.battleLogs.push(creatureListAttackTeam[attackTeamPos].getName() + \"(\" + attackPlayerName + \") deals \" + dmgDone + \" physical damage to \" + \r\n          creatureListDefenderTeam[0].getName() + \"(\" + defendPlayerName + \")\");\r\n    } else {\r\n        this.battleLogs.push(creatureListAttackTeam[attackTeamPos].getName() + \"(\" + attackPlayerName + \") attacks \" + \r\n          creatureListDefenderTeam[0].getName() + \"(\" + defendPlayerName + \").  Dodged\");\r\n    }\r\n    return dmgDone;\r\n}\r\n\r\nperformMagicAttack(creatureListAttackTeam: Creature[], attackTeamPos: number, creatureListDefenderTeam: Creature[], attackPlayerName: string, defendPlayerName: string)\r\n: number {\r\nvar dmg = this.getDamageAfterMagicResistCheck(creatureListAttackTeam, attackTeamPos, creatureListDefenderTeam);\r\ncreatureListDefenderTeam[0].getCurrentStats().life = creatureListDefenderTeam[0].getCurrentStats().life - dmg; \r\nthis.battleLogs.push(creatureListAttackTeam[attackTeamPos].getName() + \"(\" + attackPlayerName + \") deals \" + dmg + \" magic damage to \" +\r\ncreatureListDefenderTeam[0].getName() + \"(\" + defendPlayerName + \")\");\r\nreturn dmg;\r\n}\r\n\r\ngetDamageAfterArmorCheck(attackerTeam: Creature[], attackTeamPos, defenderTeam: Creature[]): number {\r\nvar dmg = attackerTeam[attackTeamPos].getCurrentStats().attack;\r\nif (defenderTeam[0].getCurrentStats().armor > 0) {\r\ndmg = Math.max(dmg - defenderTeam[0].getCurrentStats().armor, 0);\r\ndefenderTeam[0].getCurrentStats().armor--;\r\n}\r\nconsole.log('Reduced ' + (attackerTeam[attackTeamPos].getCreatureStats().attack - dmg) + ' damage');\r\nreturn dmg;\r\n}\r\n\r\ngetDamageAfterMagicResistCheck(attackerTeam: Creature[], attackTeamPos: number, defenderTeam: Creature[]): number {\r\nvar reducedDmg = attackerTeam[attackTeamPos].getCurrentStats().magicAttack * defenderTeam[0].getCurrentStats().magicResist / 100;\r\nvar dmg = attackerTeam[attackTeamPos].getCurrentStats().magicAttack - reducedDmg;\r\nconsole.log('Reduced ' + reducedDmg + ' damage');\r\nreturn dmg;\r\n}\r\n\r\ndoesDefenderDodge(dex: number): boolean {\r\nvar dodged: boolean = false;\r\nif (Math.floor(Math.random() * 8000 + 1) < dex * dex * dex) {       // 20^3 dex^3 max = 72%\r\ndodged = true;\r\n}\r\nreturn dodged;\r\n}\r\n\r\ndoesTeamOneGoFirst(creatureListTeam1: Creature[], creatureListTeam2: Creature[]) : boolean {\r\nvar isTurnTeam1 = true;\r\nvar dexTeam1 = this.getTotalDexForTeam(creatureListTeam1);\r\nvar dexTeam2 = this.getTotalDexForTeam(creatureListTeam2);\r\nif (dexTeam2 > dexTeam1) {\r\nisTurnTeam1 = false;\r\n}\r\nreturn isTurnTeam1;\r\n}\r\n\r\ngetTotalDexForTeam(creatureList: Creature[]) {\r\n    var total = 0;\r\n    for (var i = 0; i < creatureList.length; i++) {\r\n        total += creatureList[i].getCreatureStats().dex;\r\n    }\r\n}\r\n    \r\nlogBuffAction(playerName: string, creatureName: string) {\r\n    this.battleLogs.push(\r\n      creatureName + \"(\" + playerName + \") buffs the party. \"\r\n    );\r\n}\r\n\r\n\r\n}","import { ValueConverter } from '@angular/compiler/src/render3/view/template';\r\nimport { CreatureStats } from './creatureStats';\r\n\r\nexport enum CreatureType {\r\n\r\n    Empty,\r\n    Locked,\r\n    Gnome,\r\n    CarrionCrawler,\r\n    Goblin,\r\n    Genie,\r\n    Dwarf,\r\n    SkeletonWarrior,\r\n    Elaron,\r\n    Orc,\r\n    Kobold,\r\n    Paladin, \r\n    Wizard,\r\n    TreeOfLife,\r\n    Necromancer,\r\n    Mortiserion,\r\n    Archer,\r\n    Bard,\r\n    DragonEgg,\r\n    DemonPortal,\r\n    Demon,\r\n    Dragon,\r\n    FrostGiant,\r\n    InfestedRat,\r\n    PurpleWand,\r\n    GoldPile,\r\n    Recruitment,\r\n    Refresh,\r\n    NoRats,\r\n    Sorcerous\r\n};\r\n\r\n\r\n\r\nexport class Creature {\r\n    readonly creatureType: CreatureType;\r\n    private readonly creatureStats: CreatureStats;\r\n    private currentStats: CreatureStats;\r\n\r\n    currentArmorBuffUsed: boolean;\r\n    currentLifeBuffUsed: boolean;\r\n\r\n    constructor(creatureType: CreatureType) {\r\n        this.creatureType = creatureType;\r\n        this.creatureStats = this.getCreatureStatsFor(creatureType);\r\n        this.currentStats = this.getCreatureStatsFor(creatureType);\r\n        this.currentArmorBuffUsed = false;\r\n        this.currentLifeBuffUsed = false;\r\n    }\r\n\r\n    getCreatureStats(): CreatureStats { return this.creatureStats; };\r\n    getCurrentStats(): CreatureStats { return this.currentStats; };\r\n    \r\n    public getName() { return this.creatureStats.name; };\r\n    public getImage() { return this.creatureStats.image; };\r\n\r\n    public preCombat(): void {\r\n        this.currentStats = this.getCreatureStatsFor(this.creatureType);\r\n        this.currentArmorBuffUsed = false;\r\n        this.currentLifeBuffUsed = false;\r\n    }\r\n\r\n    public getCopy(): Creature {\r\n        var value: Creature = new Creature(this.creatureType);\r\n        // value.setArmorBuff(this.armorBuff);\r\n        // value.setLifeBuff(this.lifeBuff);\r\n        return value;\r\n    }\r\n\r\n    public setArmorBuff(buff: number) {\r\n        this.creatureStats.armorBuff = buff;\r\n    }\r\n\r\n    public getArmorBuff(): number {\r\n        return this.creatureStats.armorBuff;\r\n    }\r\n\r\n    public setLifeBuff(buff: number) {\r\n        this.creatureStats.lifeBuff = buff;\r\n    }\r\n\r\n    public getLifeBuff(): number {\r\n        return this.creatureStats.lifeBuff;\r\n    }\r\n\r\n    getCreatureStatsFor(creatureType: CreatureType) : CreatureStats {\r\n        var creatureStats: CreatureStats = new CreatureStats();\r\n        var name, image: string;\r\n        var life, dex, armor, charisma: number = 10,\r\n            attack: number = 0, magicAttack: number = 0, magicResist: number = 0, revivals: number = 0,\r\n            magicResistBuff: number = 0, armorBuff: number = 0, lifeBuff: number = 0, magicBuff: number = 0;\r\n        switch( creatureType ) {\r\n            case CreatureType.Archer:\r\n                name = 'Archer'; life = 10; attack = 12; dex = 16; armor = 1; charisma = 12; image = 'archer.png'; break;\r\n            case CreatureType.Bard:\r\n                name = 'Bard'; life = 15; attack = 8; dex = 12; armor = 1; charisma = 18; lifeBuff = 5; image = 'femalebard.png'; break;\r\n            case CreatureType.CarrionCrawler:\r\n                name = 'Carrion Crawler'; life = 150; attack = 12; dex = 12; armor = 6; image = 'carrioncraler.png'; break;\r\n            case CreatureType.Demon: \r\n                name = 'Demon'; life = 20; attack = 12; dex = 10; armor = 4; charisma = 4; image = 'demon.png'; break;\r\n            case CreatureType.DemonPortal:\r\n                name = 'Demon Portal'; life = 1; attack = 1; dex = 6; armor = 0; image = 'demonportal.png'; break;\r\n            case CreatureType.DragonEgg:\r\n                name = 'Dragon Egg'; life = 1; attack = 1; dex = 6; armor = 0; image = 'dragonegg.png'; break;\r\n            case CreatureType.Dwarf:\r\n                name = 'Dwarf'; life = 20; attack = 10; dex = 6; armor = 3; image = 'dwarfwarrior.png'; break;\r\n            case CreatureType.Elaron:\r\n                name = 'Elaron'; life = 12; attack = 5; magicAttack = 5; dex = 16; charisma = 14; armor = 2; image = 'elaron.png'; \r\n                magicResist = 50; magicResistBuff = 10; break;\r\n            case CreatureType.FrostGiant:\r\n                name = 'Frost Giant'; life = 25; attack = 8; dex = 6; armor = 5; image = 'frostgiant.png'; break;\r\n            case CreatureType.InfestedRat:\r\n                name = 'Infested Rat'; life = 8; attack = 4; dex = 12; armor = 0; image = 'infestedrat.png'; break;\r\n            case CreatureType.Gnome:\r\n                name = 'Gnome'; life = 10; attack = 8; dex = 12; armor = 2; image = 'gnome.png'; break;\r\n            case CreatureType.Goblin:\r\n                name = 'Goblin'; life = 10; attack = 8; dex = 14; armor = 2; image = 'goblin.png'; break;\r\n            case CreatureType.Genie:\r\n                name = 'Genie'; life = 16; attack = 6; magicAttack = 6; dex = 10; armor = 3; magicResist = 25; image = 'genie.gif'; break;\r\n            case CreatureType.Kobold:\r\n                name = 'Kobold'; life = 12; attack = 8; dex = 14; armor = 2; magicResist = 10; image = 'kobold.png'; break;\r\n            case CreatureType.Necromancer:\r\n                name = 'Necromancer'; life = 16; attack = 5; dex = 8; armor = 5; \r\n                revivals = 1; image = 'necromancer.png'; break;\r\n            case CreatureType.Mortiserion:\r\n                    name = 'Mortiserion'; life = 16; attack = 5; dex = 8; armor = 5; \r\n                    revivals = 1; image = 'mortiserion.png'; break;\r\n            case CreatureType.Orc:\r\n                name = 'Orc'; life = 18; attack = 12; dex = 8; armor = 3; image = 'orc.png'; break;\r\n            case CreatureType.Paladin:\r\n                name = 'Paladin'; life = 18; attack = 6; dex = 8; armor = 4; magicResist = 40;\r\n                armorBuff = 2; image = 'paladin.png'; break;\r\n            case CreatureType.SkeletonWarrior:\r\n                name = 'Skeleton Warrior'; life = 12; attack = 7; dex = 8; armor = 2; magicResist = 10; \r\n                revivals = 1; image = 'skeletonwarrior.png'; break;\r\n            case CreatureType.Wizard:\r\n                name = 'Wizard'; life = 10; magicAttack = 15; dex = 8; armor = 1; magicResist = 10; charisma = 16; image = 'wizard.png'; break;\r\n            case CreatureType.TreeOfLife:\r\n                name = 'Tree of Life'; life = 30; attack = 2; dex = 8; armor = 1; revivals = 1; image = 'treeoflife.png'; \r\n                lifeBuff = 5; break;\r\n            case CreatureType.Sorcerous: \r\n                name = 'Sorcerous'; life = 10; magicAttack = 25; dex = 8; armor = 1; image = 'sorcerous.png'; break;\r\n\r\n            case CreatureType.Dragon:\r\n                name = 'Dragon'; life = 20; magicAttack = 15; dex = 8; armor = 5; magicResist = 75; image = 'dragon.png'; break;\r\n            case CreatureType.PurpleWand:\r\n                name = 'Purple Wand'; life = 1; attack = 1; dex = 1; armor = 0; image = 'purplewand.png'; break;\r\n            case CreatureType.GoldPile:\r\n                name = 'Gold Pile'; life = 1; attack = 1; dex = 1; armor = 0; image = 'goldpile.png'; break;\r\n            case CreatureType.Empty:\r\n                name = 'Open Slot'; life = 1; attack = 1; dex = 1; armor = 0; image = 'blank.jpg'; break;\r\n            case CreatureType.Recruitment:\r\n                name = 'Open Slot'; life = 1; attack = 1; dex = 1; armor = 0; image = 'recruitment.jpg'; break;\r\n            case CreatureType.Refresh:\r\n                name = 'Open Slot'; life = 1; attack = 1; dex = 1; armor = 0; image = 'refresh.png'; break;\r\n            case CreatureType.NoRats:\r\n                name = 'Open Slot'; life = 1; attack = 1; dex = 1; armor = 0; image = 'norats.png'; break;\r\n            case CreatureType.Locked:\r\n                name = 'Locked'; life = 1; attack = 1; dex = 1; armor = 0; image = 'blank.jpg'; break;\r\n    \r\n            default:\r\n                console.log(\"Error, no creatureType found\");\r\n        }\r\n\r\n        creatureStats.name = name;\r\n        creatureStats.life = life;\r\n        creatureStats.attack = attack;\r\n        creatureStats.magicAttack = magicAttack;\r\n        creatureStats.dex = dex;\r\n        creatureStats.armor = armor;\r\n        creatureStats.magicResist = magicResist;\r\n        creatureStats.image = '../assets/img/' + image;\r\n        creatureStats.lifeBuff = lifeBuff;\r\n        creatureStats.armorBuff = armorBuff;\r\n        creatureStats.magicBuff = magicBuff;\r\n        creatureStats.revivals = revivals;\r\n        creatureStats.charisma = charisma;\r\n        \r\n        return creatureStats;\r\n    }\r\n\r\n\r\n}","import { templateSourceUrl } from '@angular/compiler';\r\nimport {Creature, CreatureType} from './creature'\r\n\r\nexport class CreaturePool {\r\n\r\n    tier1:  Creature[];\r\n    tier2:  Creature[];\r\n    tier3:  Creature[];\r\n\r\n    constructor() {\r\n\r\n        this.tier1 = [];\r\n        this.tier2 = [];\r\n        this.tier3 = [];\r\n    }\r\n\r\n    public addCreatureToPool(count: number, creatureType: CreatureType) {\r\n        console.log('creatureType = ' + creatureType);  \r\n\r\n        for (var i = 0; i< count; i++) {\r\n            var tempCreature: Creature = new Creature(creatureType);\r\n            this.tier1.push(tempCreature);\r\n        }\r\n      }\r\n\r\n    removeCreatureFromPool(index){\r\n        console.log('before:' + this.tier1.length);\r\n        this.tier1.splice(index, 1);\r\n        console.log('after:' + this.tier1.length);\r\n    }\r\n        \r\n}","export class CreatureStats {\r\n    name: string;\r\n    life: number;\r\n    attack: number;\r\n    magicAttack: number;\r\n    dex: number;\r\n    charisma: number;\r\n    armor: number;\r\n    magicResist: number;\r\n    image: string;\r\n    armorBuff: number;\r\n    magicBuff: number;\r\n    lifeBuff: number;\r\n    revivals: number;\r\n\r\n    // setName(name: string) { this.name = name; }\r\n};","\r\nimport { CreaturePool } from './creaturePool.model';\r\nimport { Player } from './player.model';\r\n\r\nexport class GameState {\r\n    stage: number;\r\n    turn: number;\r\n    playerList: Player[];\r\n    creaturePool: CreaturePool;\r\n\r\n    constructor(stage: number, turn: number, playerList: Player[], creaturePool: CreaturePool) {\r\n        this.stage = stage;\r\n        this.turn = turn;\r\n        this.playerList = playerList;\r\n        this.creaturePool = creaturePool;\r\n    }\r\n\r\n}","import { Creature } from './creature';\r\nimport { QuestRewardType } from './quest-rewards';\r\n\r\nexport class Player {\r\n    name: string;\r\n    life: number;\r\n    gold: number;\r\n    refreshCounter: number;\r\n    computerControlled: boolean;\r\n    creatureList: Creature[];\r\n    wins: number;\r\n    losses: number;\r\n    ties: number;\r\n    bossDmg: number;\r\n    creatureSlotsOpen: boolean[];\r\n    questReward: QuestRewardType;\r\n    questCreature: Creature;\r\n    questUnits: number;\r\n\r\n    constructor(name: string, computerControlled: boolean) {\r\n        this.name = name;\r\n        this.life = 40;\r\n        this.gold = 0;\r\n        this.refreshCounter = 3;\r\n        this.computerControlled = computerControlled;\r\n        this.creatureList = [];\r\n        this.wins=0;\r\n        this.losses=0;\r\n        this.ties=0;\r\n        this.bossDmg = 0;\r\n        this.creatureSlotsOpen = new Array<boolean>(5);\r\n        for (var i = 0; i < 3; i++) { this.creatureSlotsOpen[i] = true; }\r\n        for (var i = 3; i < 5; i++) { this.creatureSlotsOpen[i] = false; }\r\n    }\r\n    incrementWins() {\r\n        this.wins++;\r\n    }\r\n    incrementLoses() {\r\n        this.losses++;\r\n    }\r\n    incrementTies() {\r\n        this.ties++;\r\n    }\r\n\r\n    incrementDmgDone(dmg: number) {\r\n        this.bossDmg+= dmg;\r\n    }\r\n    \r\n    getRecord() :string {\r\n        return this.wins + ' - ' + this.losses + ' - ' + this.ties;\r\n    }\r\n\r\n    getBossDmg(): string {\r\n        return this.bossDmg + ' ';\r\n    }\r\n\r\n    unlockSlot(slot: number) {\r\n        this.creatureSlotsOpen[slot] = true;\r\n    }\r\n}","\r\nexport enum QuestRewardType {\r\n    \"Gold - 10g\",\r\n    \"Gold - 25g\",\r\n    \"Gold - 50g\",\r\n    \"Remove Infested Rat\",\r\n    \"Gold - 75g\",\r\n    \"Gold - 100g\",\r\n    \"Extra Refresh\",\r\n    \"Recruit Unit\",\r\n    \"Purple Wand\"\r\n}","export default \".button {\\r\\n    border:  none;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    background: blue;\\r\\n    color: #fff;\\r\\n    padding: 0.4em 0.6em;\\r\\n    font-size: 0.8em;\\r\\n    border-radius: 1em;\\r\\n  }\\r\\n  \\r\\n  button:disabled {\\r\\n    background: #dddddd;\\r\\n  }\\r\\n  \\r\\n  p {\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NvcmUtc2NyZWVuL3Njb3JlLXNjcmVlbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9zY29yZS1zY3JlZW4vc2NvcmUtc2NyZWVuLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uIHtcclxuICAgIGJvcmRlcjogIG5vbmU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kOiBibHVlO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBwYWRkaW5nOiAwLjRlbSAwLjZlbTtcclxuICAgIGZvbnQtc2l6ZTogMC44ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxZW07XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbjpkaXNhYmxlZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZGRkZGRkO1xyXG4gIH0gXHJcbiAgXHJcbiAgcCB7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICB9Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GameState } from '../gameState.model';\r\n\r\nimport { Player } from '../player.model';\r\n\r\n@Component({\r\n  selector: 'app-score-screen',\r\n  templateUrl: './score-screen.component.html',\r\n  styleUrls: ['./score-screen.component.css']\r\n})\r\nexport class ScoreScreenComponent implements OnInit {\r\n  @Input() localGameState: GameState;\r\n\r\n  sortedPlayerList: Player[] = [];\r\n  sortedBossDmgList: Player[] = [];\r\n  bottomHalfList: String[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    let currentPlayerList : Player[] = [];\r\n    for(var i=0; i<this.localGameState.playerList.length; i++) {\r\n      currentPlayerList.push(this.localGameState.playerList[i])\r\n    }\r\n    this.sortedPlayerList = currentPlayerList.sort((a,b) => {\r\n      if (b.life === a.life ) {\r\n        return b.wins - a.wins;\r\n      }\r\n      return b.life - a.life;\r\n    });\r\n\r\n    currentPlayerList = [];\r\n    for(var i=0; i<this.localGameState.playerList.length; i++) {\r\n      currentPlayerList.push(this.localGameState.playerList[i])\r\n    }\r\n\r\n    this.sortedBossDmgList = currentPlayerList.sort((a,b) => {\r\n      if (b.bossDmg === a.bossDmg) {\r\n        return 0;\r\n      }\r\n      return b.bossDmg - a.bossDmg;\r\n    });\r\n\r\n    console.log('players creature list length = ' + this.localGameState.playerList[0].creatureList.length);\r\n    // Print Player List\r\n    for(var i = 0; i<this.localGameState.playerList[0].creatureList.length; i++) {\r\n      console.log(this.localGameState.playerList[0].creatureList[i].getName());\r\n    }\r\n\r\n  }\r\n\r\n  onNext() {\r\n    this.localGameState.turn++;\r\n    this.localGameState.stage = 2;\r\n  }\r\n\r\n}\r\n","export default \".button {\\r\\n    border:  none;\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n    background: blue;\\r\\n    color: #fff;\\r\\n    padding: 0.4em 0.6em;\\r\\n    font-size: 0.8em;\\r\\n    border-radius: 1em;\\r\\n  }\\r\\n\\r\\n  button:disabled {\\r\\n    background: #dddddd;\\r\\n  }\\r\\n\\r\\n  p {\\r\\n    margin: 0px;\\r\\n    padding: 0px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VsZWN0LXF1ZXN0L3NlbGVjdC1xdWVzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9zZWxlY3QtcXVlc3Qvc2VsZWN0LXF1ZXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uIHtcclxuICAgIGJvcmRlcjogIG5vbmU7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kOiBibHVlO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBwYWRkaW5nOiAwLjRlbSAwLjZlbTtcclxuICAgIGZvbnQtc2l6ZTogMC44ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAxZW07XHJcbiAgfVxyXG5cclxuICBidXR0b246ZGlzYWJsZWQge1xyXG4gICAgYmFja2dyb3VuZDogI2RkZGRkZDtcclxuICB9IFxyXG4gIFxyXG4gIHAge1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GameState } from '../gameState.model';\r\nimport { Battle } from '../battle';\r\nimport { Player } from '../player.model';\r\nimport { Creature, CreatureType } from '../creature';\r\nimport { QuestRewardType } from '../quest-rewards';\r\n\r\n\r\n@Component({\r\n  selector: 'app-select-quest',\r\n  templateUrl: './select-quest.component.html',\r\n  styleUrls: ['./select-quest.component.css']\r\n})\r\nexport class SelectQuestComponent implements OnInit {\r\n\r\n  @Input() localGameState: GameState;\r\n\r\n  battleLogs: String[];\r\n  titleLog: String;\r\n\r\n  questCreature: Creature[] = [];\r\n  questUnits: number[] = [];\r\n  questRewards: string[] = [];\r\n  questRewardImages1: Creature[] = [];\r\n  questRewardImages2: Creature[] = [];\r\n  questRewardImages3: Creature[] = [];\r\n  questRewardImages4: Creature[] = [];\r\n  questRewardImages5: Creature[] = [];\r\n\r\n  constructor() { }\r\n\r\n  getLowest(range: number, times: number) : number {\r\n    var result: number = range;\r\n    for (var i = 0; i< times; i++) {\r\n      var roll = Math.floor(Math.random()*range);\r\n      if (roll < result) { \r\n        result = roll;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getRandom(start: number, end: number) : number {\r\n    var result = Math.floor(Math.random() * (end - start + 1) + start);\r\n    console.log('inRandom, start, end, rnd = ' + start + end + result);\r\n    return result;\r\n  }\r\n\r\n  getQuestRewardList(questNum: number) : Creature[] {\r\n    var creatureList: Creature[] = [];\r\n    switch(questNum) {\r\n      case QuestRewardType['Gold - 10g']:\r\n        creatureList.push(new Creature(CreatureType.GoldPile)); break;\r\n      case QuestRewardType['Gold - 25g']:\r\n        creatureList.push(new Creature(CreatureType.GoldPile)); break;\r\n      case QuestRewardType['Gold - 50g']:\r\n        creatureList.push(new Creature(CreatureType.GoldPile)); \r\n        creatureList.push(new Creature(CreatureType.GoldPile)); break;\r\n      case QuestRewardType['Remove Infested Rat']:\r\n        creatureList.push(new Creature(CreatureType.NoRats)); break;\r\n      case QuestRewardType['Gold - 75g']:\r\n        creatureList.push(new Creature(CreatureType.GoldPile));   \r\n        creatureList.push(new Creature(CreatureType.GoldPile)); \r\n        creatureList.push(new Creature(CreatureType.GoldPile)); break;\r\n      case QuestRewardType['Gold - 100g']:\r\n        creatureList.push(new Creature(CreatureType.GoldPile));   \r\n        creatureList.push(new Creature(CreatureType.GoldPile));   \r\n        creatureList.push(new Creature(CreatureType.GoldPile)); \r\n        creatureList.push(new Creature(CreatureType.GoldPile)); break;\r\n      case QuestRewardType['Extra Refresh']:\r\n        creatureList.push(new Creature(CreatureType.Refresh)); break;\r\n      case QuestRewardType['Recruit Unit']:\r\n        creatureList.push(new Creature(CreatureType.Recruitment)); break;\r\n      case QuestRewardType['Purple Wand']:\r\n        creatureList.push(new Creature(CreatureType.PurpleWand)); break;\r\n      default:\r\n        console.log('error');\r\n    }\r\n    return creatureList;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.battleLogs = [];\r\n\r\n    var rollsPerSlot = [5, 3, 2, 1, 1];\r\n\r\n    for (var i = 0; i < 5; i++) {\r\n      var rndCreature = this.getRandom(1 + i, 3+i);\r\n      console.log('rndCreature=' + rndCreature);\r\n      switch(rndCreature) {\r\n        case 1:\r\n          this.questCreature.push(new Creature(CreatureType.InfestedRat)); break;\r\n        case 2:\r\n          this.questCreature.push(new Creature(CreatureType.Goblin)); break;\r\n        case 3:\r\n          this.questCreature.push(new Creature(CreatureType.Kobold)); break;\r\n        case 4:\r\n          this.questCreature.push(new Creature(CreatureType.SkeletonWarrior)); break;\r\n        case 5:\r\n          this.questCreature.push(new Creature(CreatureType.FrostGiant)); break;\r\n        case 6:\r\n          this.questCreature.push(new Creature(CreatureType.Wizard)); break;\r\n        case 7:\r\n          this.questCreature.push(new Creature(CreatureType.Dragon)); break;\r\n        default:\r\n          console.log('error');\r\n      }\r\n      // this.questCreature.push(new Creature(CreatureType.InfestedRat));\r\n      this.questUnits.push(this.getRandom(1+i, 5+i));\r\n      var questNum = Math.min(this.getRandom(i, (1+i)*2), (Object.keys(QuestRewardType).length/2 - 1));\r\n      console.log('questNum=' + questNum);\r\n      this.questRewards.push(QuestRewardType[questNum]);\r\n      switch (i) {\r\n        case 0:  this.questRewardImages1 = this.getQuestRewardList(questNum); break;\r\n        case 1:  this.questRewardImages2 = this.getQuestRewardList(questNum); break;\r\n        case 2:  this.questRewardImages3 = this.getQuestRewardList(questNum); break;\r\n        case 3:  this.questRewardImages4 = this.getQuestRewardList(questNum); break;\r\n        case 4:  this.questRewardImages5 = this.getQuestRewardList(questNum); break;\r\n      }\r\n      \r\n      console.log('keys=' + Object.keys(QuestRewardType).length/2);\r\n    }\r\n  }\r\n\r\n  onSelectQuest(slot: number) {\r\n    var listSlot = slot -1;\r\n    this.localGameState.playerList[0].questCreature = this.questCreature[listSlot];\r\n    this.localGameState.playerList[0].questUnits = this.questUnits[listSlot];\r\n    this.localGameState.playerList[0].questReward = QuestRewardType[this.questRewards[listSlot]];\r\n    this.localGameState.stage++;\r\n  }\r\n\r\n  onNext() {\r\n    // this.localGameState.stage++;\r\n  }\r\n\r\n}\r\n","export default \".button {\\r\\n  border:  none;\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  background: blue;\\r\\n  color: #fff;\\r\\n  padding: 0.4em 0.6em;\\r\\n  font-size: 0.8em;\\r\\n  border-radius: 1em;\\r\\n}\\r\\n\\r\\nbutton:disabled {\\r\\n  background: #dddddd;\\r\\n}\\r\\n\\r\\np {\\r\\n  margin: 0px;\\r\\n  padding: 0px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGF2ZXJuLWFwcC90YXZlcm4tYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLG9CQUFvQjtFQUNwQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL3RhdmVybi1hcHAvdGF2ZXJuLWFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbiB7XHJcbiAgYm9yZGVyOiAgbm9uZTtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGJhY2tncm91bmQ6IGJsdWU7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgcGFkZGluZzogMC40ZW0gMC42ZW07XHJcbiAgZm9udC1zaXplOiAwLjhlbTtcclxuICBib3JkZXItcmFkaXVzOiAxZW07XHJcbn1cclxuXHJcbmJ1dHRvbjpkaXNhYmxlZCB7XHJcbiAgYmFja2dyb3VuZDogI2RkZGRkZDtcclxufSBcclxuXHJcbnAge1xyXG4gIG1hcmdpbjogMHB4O1xyXG4gIHBhZGRpbmc6IDBweDtcclxufSJdfQ== */\"","import { element } from 'protractor';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { GameState } from '../gameState.model';\r\nimport { CreatureType, Creature} from '../creature';\r\nimport { TavernCreature } from '../TavernCreature';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { takeWhile, map } from 'rxjs/operators';\r\nimport { EMPTY_SOURCE_SPAN } from '@angular/compiler';\r\nimport Utils from '../utils';\r\n\r\n\r\n@Component({\r\n  selector: 'app-tavern-app',\r\n  templateUrl: './tavern-app.component.html',\r\n  styleUrls: ['./tavern-app.component.css']\r\n})\r\n\r\n\r\nexport class TavernAppComponent implements OnInit {\r\n\r\n  @Input() localGameState: GameState;\r\n\r\n  counter$: Observable<number>;\r\n  counter = 15;\r\n  refreshCounter = 0;\r\n\r\n  selections: string[] = [\"Balanced Gear\", \"Taunt Gear\", \"Attack Gear\"];\r\n  currentSelection: number = 0;\r\n\r\n  tavernCreatureList : TavernCreature[];\r\n  \r\n  constructor() {\r\n    console.log('in tavern consturctor');\r\n\r\n    this.tavernCreatureList = [];\r\n\r\n    // timer(1000,1000).pipe(\r\n    //   takeWhile( () => this.counter > -1 ),\r\n    //   map(() => this.counter--)\r\n    //   // map((x) => {\r\n    //   //   if (this.count === 0) { \r\n    //   //     this.localGameState.stage=3; \r\n    //   //   }})\r\n    // ).subscribe( () => {\r\n    //   if (this.counter === -1) {\r\n    //     this.localGameState.stage = 3;\r\n    //     // Update other players\r\n    //     for (var i = 1; i < this.localGameState.playerList.length; i++ ) {\r\n    //       let slot = this.getRandomSlot(1);\r\n    //       this.localGameState.playerList[i].creatureList.push(this.localGameState.creaturePool.tier1[slot]);\r\n    //     }\r\n    //   }\r\n    // })\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    // Grab 3 creatures from the pool that will be for sale\r\n    console.log('in ngOnInit');\r\n    this.refreshCounter = this.localGameState.playerList[0].refreshCounter;\r\n\r\n    this.refreshTavernBoard();\r\n    this.localGameState.playerList[0].gold += 100;\r\n  }\r\n\r\n  onRefresh() {\r\n    if (this.refreshCounter > 0) {\r\n      this.refreshCounter--;\r\n      this.refreshTavernBoard();\r\n    }\r\n  }\r\n\r\n  onSell(slot: number) {\r\n    if (this.localGameState.playerList[0].creatureList.length > slot) {\r\n      var tempCreature : Creature = this.localGameState.playerList[0].creatureList[slot].getCopy();\r\n      this.localGameState.playerList[0].creatureList.splice(slot, 1);\r\n      this.localGameState.creaturePool.addCreatureToPool(1, tempCreature.creatureType);\r\n      this.localGameState.playerList[0].gold += 50;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onMoveRight(slot: number) {\r\n    var rightSlot: number = slot + 1;\r\n    console.log('slot = ' + slot + ', rightSlot = ' + rightSlot);\r\n    if (this.localGameState.playerList[0].creatureList.length > rightSlot) {\r\n      var tempCreature: Creature = this.localGameState.playerList[0].creatureList[slot];\r\n      this.localGameState.playerList[0].creatureList[slot] = this.localGameState.playerList[0].creatureList[rightSlot];\r\n      this.localGameState.playerList[0].creatureList[rightSlot] = tempCreature;\r\n    }\r\n  }\r\n\r\n  getTavernCreature(index:number) {\r\n    return this.tavernCreatureList[index];\r\n  }\r\n\r\n  isCreatureInSlot(index:number) : boolean {\r\n    var result: boolean = false;\r\n    if (this.localGameState.playerList[0].creatureList.length - 1 >= index) {\r\n      result = true;\r\n    } \r\n    console.log('return ' + result);\r\n    return result;\r\n  }\r\n\r\n  getPlayersBoard(index: number) {\r\n    if (this.localGameState.playerList[0].creatureList.length - 1 >= index) {\r\n      return this.localGameState.playerList[0].creatureList[index];\r\n    } \r\n    \r\n    if (this.localGameState.playerList[0].creatureSlotsOpen[index]) {\r\n      return  new Creature(CreatureType.Empty);\r\n    } else {\r\n      return new Creature(CreatureType.Locked);\r\n    }\r\n  }\r\n\r\n  getIsSlotLocked(slot: number) {\r\n    return !this.localGameState.playerList[0].creatureSlotsOpen[slot];\r\n  }\r\n\r\n  onUnlock(slot: number) {\r\n    if (this.localGameState.playerList[0].gold >= 100) {\r\n      this.localGameState.playerList[0].gold -= 100;\r\n      this.localGameState.playerList[0].creatureSlotsOpen[slot] = true;\r\n    }\r\n  }\r\n\r\n  onUpgradeRecruitment() {\r\n    if (this.localGameState.playerList[0].gold >= 100) {\r\n      this.localGameState.creaturePool.addCreatureToPool(1, Utils.upgradeRecruitment())\r\n      this.localGameState.playerList[0].gold -= 100;\r\n    }\r\n  }\r\n\r\n  getMaxPartySize(): number {\r\n    var maxPartySize: number = 0;\r\n    for (var i = 0; i < 6; i++) { \r\n      if (this.localGameState.playerList[0].creatureSlotsOpen[i]) {\r\n        maxPartySize++;\r\n      }\r\n    }\r\n    return maxPartySize;\r\n  }\r\n\r\n  isPartyFull() {\r\n    var maxPartySize: number = this.getMaxPartySize();\r\n    if (this.localGameState.playerList[0].creatureList.length >= maxPartySize) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  refreshTavernBoard() {\r\n    this.tavernCreatureList = [];\r\n    var tempCreature: TavernCreature;\r\n    var randomList: number[] = [];\r\n    var done: boolean = false;\r\n    var count: number = 0;\r\n\r\n    while (done === false) {\r\n      for(var i = 1; i <= 3; i++){\r\n        randomList.push(this.getRandomSlot(1));\r\n      }\r\n      if (randomList[0] != randomList[1] && randomList[1] != randomList[2]) {\r\n        done = true;\r\n      }\r\n      count++;\r\n      if (count > 100) {\r\n        done = true;    // prevent infinite loop\r\n      }\r\n  \r\n    }\r\n\r\n    for(var i = 1; i <= 3; i++){\r\n      let poolSlot = this.getRandomSlot(1);\r\n      tempCreature = new TavernCreature(i, this.localGameState.creaturePool.tier1[poolSlot], poolSlot);\r\n      this.tavernCreatureList.push(tempCreature);\r\n    }\r\n\r\n  }\r\n\r\n  onBuy(slot: number) {\r\n    if (this.localGameState.playerList[0].gold >= 100) {\r\n      this.localGameState.playerList[0].gold -= 100;\r\n      this.doPurchase(slot);\r\n    }\r\n  }\r\n\r\n  onNext() {\r\n    switch (this.localGameState.turn) {\r\n      case 1: \r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.Orc)); \r\n        this.localGameState.playerList[2].creatureList.push(this.localGameState.creaturePool.tier1[this.getRandomSlot(1)]);\r\n        break;\r\n      case 2: \r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.Orc)); \r\n        this.localGameState.playerList[2].creatureList.push(this.localGameState.creaturePool.tier1[this.getRandomSlot(1)]);\r\n        break;\r\n      case 3: \r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.SkeletonWarrior));\r\n        this.localGameState.playerList[2].creatureList.push(this.localGameState.creaturePool.tier1[this.getRandomSlot(1)]);\r\n        break;\r\n      case 4: \r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.Necromancer));\r\n        this.localGameState.playerList[2].creatureList.push(this.localGameState.creaturePool.tier1[this.getRandomSlot(1)]);\r\n      break;\r\n      case 5:\r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.Necromancer)); \r\n        this.localGameState.playerList[2].creatureList.push(this.localGameState.creaturePool.tier1[this.getRandomSlot(1)]);\r\n      case 6:\r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.SkeletonWarrior));\r\n        this.localGameState.playerList[2].creatureList.push(this.localGameState.creaturePool.tier1[this.getRandomSlot(1)]);\r\n        break;\r\n\r\n      default:\r\n        this.localGameState.playerList[1].creatureList.splice(0,this.localGameState.playerList[1].creatureList.length);  \r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.TreeOfLife));\r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.Mortiserion)); \r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.SkeletonWarrior)); \r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.SkeletonWarrior));\r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.Necromancer)); \r\n        this.localGameState.playerList[1].creatureList.push(new Creature(CreatureType.Necromancer)); \r\n\r\n        this.localGameState.playerList[2].creatureList.splice(0,this.localGameState.playerList[2].creatureList.length);  \r\n        this.localGameState.playerList[2].creatureList.push(new Creature(CreatureType.Bard));\r\n        this.localGameState.playerList[2].creatureList.push(new Creature(CreatureType.Bard)); \r\n        this.localGameState.playerList[2].creatureList.push(new Creature(CreatureType.Elaron)); \r\n        this.localGameState.playerList[2].creatureList.push(new Creature(CreatureType.Wizard));\r\n        this.localGameState.playerList[2].creatureList.push(new Creature(CreatureType.Wizard)); \r\n        this.localGameState.playerList[2].creatureList.push(new Creature(CreatureType.Wizard)); break;\r\n      \r\n    }\r\n    for (var i = 3; i < this.localGameState.playerList.length; i++ ) {\r\n        if (this.localGameState.playerList[i].creatureList.length < 8) {\r\n          let slot = this.getRandomSlot(1);\r\n          this.localGameState.playerList[i].creatureList.push(this.localGameState.creaturePool.tier1[slot]);\r\n        }\r\n        }\r\n    this.localGameState.stage++;\r\n  }\r\n\r\n  doPurchase(slot: number) {\r\n\r\n    this.tavernCreatureList[slot].sold = true;\r\n    this.localGameState.creaturePool.removeCreatureFromPool(this.tavernCreatureList[slot].poolSlot);\r\n    console.log(\"tavern sold slot \" + slot);\r\n    console.log(\"pool  sold slot \" + this.tavernCreatureList[slot].poolSlot);\r\n    console.log(this.tavernCreatureList[slot].sold);\r\n\r\n    if (this.tavernCreatureList[slot].creature.getName() === 'Demon Portal') {\r\n      console.log('adding 3 demons');\r\n      this.localGameState.creaturePool.addCreatureToPool(3, CreatureType.Demon);\r\n      this.localGameState.creaturePool.addCreatureToPool(3, CreatureType.Mortiserion);\r\n      // this.localGameState.playerList[0].creatureList.push(new Creature('Imp', 2, 2, 'blank.jpg'));\r\n    } else if (this.tavernCreatureList[slot].creature.getName() === 'Dragon Egg') {\r\n        this.localGameState.creaturePool.addCreatureToPool(3, CreatureType.Dragon);\r\n        // this.localGameState.playerList[0].creatureList.push(new Creature(CreatureType.Dragon);\r\n    } else if (this.tavernCreatureList[slot].creature.getName() === 'Bard') {\r\n      this.localGameState.playerList[0].creatureList.push(this.tavernCreatureList[slot].creature);\r\n      this.localGameState.playerList[0].refreshCounter++;\r\n    } else {\r\n      this.localGameState.playerList[0].creatureList.push(this.tavernCreatureList[slot].creature);\r\n    }\r\n\r\n    \r\n    // Print Player List\r\n    for(var i = 0; i<this.localGameState.playerList[0].creatureList.length; i++) {\r\n      console.log(this.localGameState.playerList[0].creatureList[i].getName());\r\n    }\r\n\r\n  }\r\n\r\n  triggerFunction() {\r\n    console.log('Timer Ended');\r\n  }\r\n\r\n  getRandomSlot(tier: number) : number {\r\n    var size = 0;\r\n    if (tier === 1) {\r\n      size = this.localGameState.creaturePool.tier1.length;\r\n    }\r\n    return Math.floor((Math.random() * size) + 0);\r\n  }\r\n\r\n  // getRandomCreature(tier: number) : Creature {\r\n\r\n  //   var creature: Creature = this.localGameState.creaturePool.tier1[slot];\r\n  //   return creature;\r\n\r\n  // }\r\n\r\n  getCurrentSelection(): string {\r\n    return this.selections[this.currentSelection];\r\n  }\r\n\r\n  toggleSelection(): void {\r\n    this.currentSelection = (this.currentSelection + 1) % this.selections.length;\r\n  }\r\n\r\n}\r\n","export default \"html, body {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    height: 100%;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.fullscreen-image {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.fullscreen-image img {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    -o-object-fit: cover;\\r\\n       object-fit: cover; /* This property ensures the image covers the entire container while maintaining its aspect ratio */\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGl0bGUtc2NyZWVuLWFwcC90aXRsZS1zY3JlZW4tYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxTQUFTO0lBQ1QsVUFBVTtJQUNWLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0lBQ1gsWUFBWTtJQUNaLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osb0JBQWlCO09BQWpCLGlCQUFpQixFQUFFLG1HQUFtRztBQUMxSCIsImZpbGUiOiJzcmMvYXBwL3RpdGxlLXNjcmVlbi1hcHAvdGl0bGUtc2NyZWVuLWFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaHRtbCwgYm9keSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmZ1bGxzY3JlZW4taW1hZ2Uge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmZ1bGxzY3JlZW4taW1hZ2UgaW1nIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7IC8qIFRoaXMgcHJvcGVydHkgZW5zdXJlcyB0aGUgaW1hZ2UgY292ZXJzIHRoZSBlbnRpcmUgY29udGFpbmVyIHdoaWxlIG1haW50YWluaW5nIGl0cyBhc3BlY3QgcmF0aW8gKi9cclxufVxyXG4iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { GameState } from '../gameState.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-title-screen-app',\r\n  templateUrl: './title-screen-app.component.html',\r\n  styleUrls: ['./title-screen-app.component.css']\r\n})\r\nexport class TitleScreenAppComponent implements OnInit {\r\n\r\n  @Input() localGameState: GameState;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onStartGame() {\r\n    this.localGameState.stage  = 2;\r\n  }\r\n\r\n}\r\n","import { Creature, CreatureType } from \"./creature\";\r\n\r\nexport default class Utils {\r\n    static upgradeRecruitment() {\r\n        var result: CreatureType;\r\n        var pickOne = Math.floor((Math.random() * 4) + 0);\r\n        console.log('pickOne = ' + pickOne);\r\n        switch(pickOne) {\r\n          case 0:\r\n            result = CreatureType.Elaron; break;\r\n          case 1:\r\n            result = CreatureType.Paladin; break;\r\n          case 2:\r\n            result = CreatureType.DragonEgg; break;\r\n          case 3:\r\n            result = CreatureType.DemonPortal; break;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static findFirstRatSlot(creatureList: Creature[]): number {\r\n        var slot = -1;\r\n        console.log('find first slot:  len = ' + creatureList.length);\r\n        for (var i = 0; i< creatureList.length; i++) {\r\n            console.log('creatureType = ' + creatureList[i].creatureType + ', ratCreatureType = ' + CreatureType.InfestedRat);\r\n            if ((creatureList[i].creatureType === CreatureType.InfestedRat) && (slot == -1)) {\r\n                slot = i;\r\n            }\r\n        }\r\n        return slot;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}